{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE ScopedTypeVariables #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields
  ( AnyField (..),
    anyFieldP,
    anyFieldB,
    IsAnyField (..),
    module X,
  )
where

import Data.ByteString (ByteString)
import qualified Data.ByteString.Builder as ByteString
import Data.Validity
import Data.Void (Void)
import FIX.Core
import FIX.Fields.BeginString as X
import FIX.Fields.BodyLength as X
import FIX.Fields.CheckSum as X
import FIX.Fields.DeliverToCompID as X
import FIX.Fields.DeliverToLocationID as X
import FIX.Fields.DeliverToSubID as X
import FIX.Fields.EncryptMethod as X
import FIX.Fields.HeartBtInt as X
import FIX.Fields.HopCompID as X
import FIX.Fields.HopRefID as X
import FIX.Fields.HopSendingTime as X
import FIX.Fields.LastMsgSeqNumProcessed as X
import FIX.Fields.MaxMessageSize as X
import FIX.Fields.MessageEncoding as X
import FIX.Fields.MsgDirection as X
import FIX.Fields.MsgSeqNum as X
import FIX.Fields.MsgType as X
import FIX.Fields.NextExpectedMsgSeqNum as X
import FIX.Fields.NoHops as X
import FIX.Fields.NoMsgTypes as X
import FIX.Fields.OnBehalfOfCompID as X
import FIX.Fields.OnBehalfOfLocationID as X
import FIX.Fields.OnBehalfOfSubID as X
import FIX.Fields.OrigSendingTime as X
import FIX.Fields.Password as X
import FIX.Fields.PossDupFlag as X
import FIX.Fields.PossResend as X
import FIX.Fields.RawData as X
import FIX.Fields.RefMsgType as X
import FIX.Fields.ResetSeqNumFlag as X
import FIX.Fields.SecureData as X
import FIX.Fields.SenderCompID as X
import FIX.Fields.SenderLocationID as X
import FIX.Fields.SenderSubID as X
import FIX.Fields.SendingTime as X
import FIX.Fields.Signature as X
import FIX.Fields.SignatureLength as X
import FIX.Fields.TargetCompID as X
import FIX.Fields.TargetLocationID as X
import FIX.Fields.TargetSubID as X
import FIX.Fields.TestMessageIndicator as X
import FIX.Fields.TestReqID as X
import FIX.Fields.Username as X
import FIX.Fields.XmlData as X
import GHC.Generics (Generic)
import Text.Megaparsec
import Text.Megaparsec.Byte.Lexer

data AnyField
  = SomeBeginString !BeginString
  | SomeBodyLength !BodyLength
  | SomeCheckSum !CheckSum
  | SomeMsgSeqNum !MsgSeqNum
  | SomeMsgType !MsgType
  | SomePossDupFlag !PossDupFlag
  | SomeSenderCompID !SenderCompID
  | SomeSenderSubID !SenderSubID
  | SomeSendingTime !SendingTime
  | SomeTargetCompID !TargetCompID
  | SomeTargetSubID !TargetSubID
  | SomeSignature !Signature
  | SomeSecureData !SecureData
  | SomeSignatureLength !SignatureLength
  | SomeRawData !RawData
  | SomePossResend !PossResend
  | SomeEncryptMethod !EncryptMethod
  | SomeHeartBtInt !HeartBtInt
  | SomeTestReqID !TestReqID
  | SomeOnBehalfOfCompID !OnBehalfOfCompID
  | SomeOnBehalfOfSubID !OnBehalfOfSubID
  | SomeOrigSendingTime !OrigSendingTime
  | SomeDeliverToCompID !DeliverToCompID
  | SomeDeliverToSubID !DeliverToSubID
  | SomeResetSeqNumFlag !ResetSeqNumFlag
  | SomeSenderLocationID !SenderLocationID
  | SomeTargetLocationID !TargetLocationID
  | SomeOnBehalfOfLocationID !OnBehalfOfLocationID
  | SomeDeliverToLocationID !DeliverToLocationID
  | SomeXmlData !XmlData
  | SomeMessageEncoding !MessageEncoding
  | SomeLastMsgSeqNumProcessed !LastMsgSeqNumProcessed
  | SomeRefMsgType !RefMsgType
  | SomeMaxMessageSize !MaxMessageSize
  | SomeNoMsgTypes !NoMsgTypes
  | SomeMsgDirection !MsgDirection
  | SomeTestMessageIndicator !TestMessageIndicator
  | SomeUsername !Username
  | SomePassword !Password
  | SomeNoHops !NoHops
  | SomeHopCompID !HopCompID
  | SomeHopSendingTime !HopSendingTime
  | SomeHopRefID !HopRefID
  | SomeNextExpectedMsgSeqNum !NextExpectedMsgSeqNum
  deriving stock (Show, Eq, Generic)

instance Validity AnyField

anyFieldB :: AnyField -> ByteString.Builder
anyFieldB = \case
  SomeBeginString f -> fieldB f
  SomeBodyLength f -> fieldB f
  SomeCheckSum f -> fieldB f
  SomeMsgSeqNum f -> fieldB f
  SomeMsgType f -> fieldB f
  SomePossDupFlag f -> fieldB f
  SomeSenderCompID f -> fieldB f
  SomeSenderSubID f -> fieldB f
  SomeSendingTime f -> fieldB f
  SomeTargetCompID f -> fieldB f
  SomeTargetSubID f -> fieldB f
  SomeSignature f -> fieldB f
  SomeSecureData f -> fieldB f
  SomeSignatureLength f -> fieldB f
  SomeRawData f -> fieldB f
  SomePossResend f -> fieldB f
  SomeEncryptMethod f -> fieldB f
  SomeHeartBtInt f -> fieldB f
  SomeTestReqID f -> fieldB f
  SomeOnBehalfOfCompID f -> fieldB f
  SomeOnBehalfOfSubID f -> fieldB f
  SomeOrigSendingTime f -> fieldB f
  SomeDeliverToCompID f -> fieldB f
  SomeDeliverToSubID f -> fieldB f
  SomeResetSeqNumFlag f -> fieldB f
  SomeSenderLocationID f -> fieldB f
  SomeTargetLocationID f -> fieldB f
  SomeOnBehalfOfLocationID f -> fieldB f
  SomeDeliverToLocationID f -> fieldB f
  SomeXmlData f -> fieldB f
  SomeMessageEncoding f -> fieldB f
  SomeLastMsgSeqNumProcessed f -> fieldB f
  SomeRefMsgType f -> fieldB f
  SomeMaxMessageSize f -> fieldB f
  SomeNoMsgTypes f -> fieldB f
  SomeMsgDirection f -> fieldB f
  SomeTestMessageIndicator f -> fieldB f
  SomeUsername f -> fieldB f
  SomePassword f -> fieldB f
  SomeNoHops f -> fieldB f
  SomeHopCompID f -> fieldB f
  SomeHopSendingTime f -> fieldB f
  SomeHopRefID f -> fieldB f
  SomeNextExpectedMsgSeqNum f -> fieldB f

anyFieldP :: Parsec Void ByteString AnyField
anyFieldP = do
  tag <- decimal
  let fp :: forall f. (IsField f) => Parsec Void ByteString f
      fp = fieldP tag
  case tag of
    8 -> SomeBeginString <$> fp
    9 -> SomeBodyLength <$> fp
    10 -> SomeCheckSum <$> fp
    34 -> SomeMsgSeqNum <$> fp
    35 -> SomeMsgType <$> fp
    43 -> SomePossDupFlag <$> fp
    49 -> SomeSenderCompID <$> fp
    50 -> SomeSenderSubID <$> fp
    52 -> SomeSendingTime <$> fp
    56 -> SomeTargetCompID <$> fp
    57 -> SomeTargetSubID <$> fp
    88 -> SomeSignature <$> fp
    90 -> SomeSecureData <$> fp
    93 -> SomeSignatureLength <$> fp
    95 -> SomeRawData <$> fp
    97 -> SomePossResend <$> fp
    98 -> SomeEncryptMethod <$> fp
    108 -> SomeHeartBtInt <$> fp
    112 -> SomeTestReqID <$> fp
    115 -> SomeOnBehalfOfCompID <$> fp
    116 -> SomeOnBehalfOfSubID <$> fp
    122 -> SomeOrigSendingTime <$> fp
    128 -> SomeDeliverToCompID <$> fp
    129 -> SomeDeliverToSubID <$> fp
    141 -> SomeResetSeqNumFlag <$> fp
    142 -> SomeSenderLocationID <$> fp
    143 -> SomeTargetLocationID <$> fp
    144 -> SomeOnBehalfOfLocationID <$> fp
    145 -> SomeDeliverToLocationID <$> fp
    212 -> SomeXmlData <$> fp
    347 -> SomeMessageEncoding <$> fp
    369 -> SomeLastMsgSeqNumProcessed <$> fp
    372 -> SomeRefMsgType <$> fp
    383 -> SomeMaxMessageSize <$> fp
    384 -> SomeNoMsgTypes <$> fp
    385 -> SomeMsgDirection <$> fp
    464 -> SomeTestMessageIndicator <$> fp
    553 -> SomeUsername <$> fp
    554 -> SomePassword <$> fp
    627 -> SomeNoHops <$> fp
    628 -> SomeHopCompID <$> fp
    629 -> SomeHopSendingTime <$> fp
    630 -> SomeHopRefID <$> fp
    789 -> SomeNextExpectedMsgSeqNum <$> fp
    _ -> fail ("Unknown field tag: " <> show tag)

class (IsField a) => IsAnyField a where
  unpackAnyField :: AnyField -> Maybe a
  packAnyField :: a -> AnyField

instance IsAnyField BeginString where
  packAnyField = SomeBeginString
  unpackAnyField = \case
    SomeBeginString f -> Just f
    _ -> Nothing

instance IsAnyField BodyLength where
  packAnyField = SomeBodyLength
  unpackAnyField = \case
    SomeBodyLength f -> Just f
    _ -> Nothing

instance IsAnyField CheckSum where
  packAnyField = SomeCheckSum
  unpackAnyField = \case
    SomeCheckSum f -> Just f
    _ -> Nothing

instance IsAnyField MsgSeqNum where
  packAnyField = SomeMsgSeqNum
  unpackAnyField = \case
    SomeMsgSeqNum f -> Just f
    _ -> Nothing

instance IsAnyField MsgType where
  packAnyField = SomeMsgType
  unpackAnyField = \case
    SomeMsgType f -> Just f
    _ -> Nothing

instance IsAnyField PossDupFlag where
  packAnyField = SomePossDupFlag
  unpackAnyField = \case
    SomePossDupFlag f -> Just f
    _ -> Nothing

instance IsAnyField SenderCompID where
  packAnyField = SomeSenderCompID
  unpackAnyField = \case
    SomeSenderCompID f -> Just f
    _ -> Nothing

instance IsAnyField SenderSubID where
  packAnyField = SomeSenderSubID
  unpackAnyField = \case
    SomeSenderSubID f -> Just f
    _ -> Nothing

instance IsAnyField SendingTime where
  packAnyField = SomeSendingTime
  unpackAnyField = \case
    SomeSendingTime f -> Just f
    _ -> Nothing

instance IsAnyField TargetCompID where
  packAnyField = SomeTargetCompID
  unpackAnyField = \case
    SomeTargetCompID f -> Just f
    _ -> Nothing

instance IsAnyField TargetSubID where
  packAnyField = SomeTargetSubID
  unpackAnyField = \case
    SomeTargetSubID f -> Just f
    _ -> Nothing

instance IsAnyField Signature where
  packAnyField = SomeSignature
  unpackAnyField = \case
    SomeSignature f -> Just f
    _ -> Nothing

instance IsAnyField SecureData where
  packAnyField = SomeSecureData
  unpackAnyField = \case
    SomeSecureData f -> Just f
    _ -> Nothing

instance IsAnyField SignatureLength where
  packAnyField = SomeSignatureLength
  unpackAnyField = \case
    SomeSignatureLength f -> Just f
    _ -> Nothing

instance IsAnyField RawData where
  packAnyField = SomeRawData
  unpackAnyField = \case
    SomeRawData f -> Just f
    _ -> Nothing

instance IsAnyField PossResend where
  packAnyField = SomePossResend
  unpackAnyField = \case
    SomePossResend f -> Just f
    _ -> Nothing

instance IsAnyField EncryptMethod where
  packAnyField = SomeEncryptMethod
  unpackAnyField = \case
    SomeEncryptMethod f -> Just f
    _ -> Nothing

instance IsAnyField HeartBtInt where
  packAnyField = SomeHeartBtInt
  unpackAnyField = \case
    SomeHeartBtInt f -> Just f
    _ -> Nothing

instance IsAnyField TestReqID where
  packAnyField = SomeTestReqID
  unpackAnyField = \case
    SomeTestReqID f -> Just f
    _ -> Nothing

instance IsAnyField OnBehalfOfCompID where
  packAnyField = SomeOnBehalfOfCompID
  unpackAnyField = \case
    SomeOnBehalfOfCompID f -> Just f
    _ -> Nothing

instance IsAnyField OnBehalfOfSubID where
  packAnyField = SomeOnBehalfOfSubID
  unpackAnyField = \case
    SomeOnBehalfOfSubID f -> Just f
    _ -> Nothing

instance IsAnyField OrigSendingTime where
  packAnyField = SomeOrigSendingTime
  unpackAnyField = \case
    SomeOrigSendingTime f -> Just f
    _ -> Nothing

instance IsAnyField DeliverToCompID where
  packAnyField = SomeDeliverToCompID
  unpackAnyField = \case
    SomeDeliverToCompID f -> Just f
    _ -> Nothing

instance IsAnyField DeliverToSubID where
  packAnyField = SomeDeliverToSubID
  unpackAnyField = \case
    SomeDeliverToSubID f -> Just f
    _ -> Nothing

instance IsAnyField ResetSeqNumFlag where
  packAnyField = SomeResetSeqNumFlag
  unpackAnyField = \case
    SomeResetSeqNumFlag f -> Just f
    _ -> Nothing

instance IsAnyField SenderLocationID where
  packAnyField = SomeSenderLocationID
  unpackAnyField = \case
    SomeSenderLocationID f -> Just f
    _ -> Nothing

instance IsAnyField TargetLocationID where
  packAnyField = SomeTargetLocationID
  unpackAnyField = \case
    SomeTargetLocationID f -> Just f
    _ -> Nothing

instance IsAnyField OnBehalfOfLocationID where
  packAnyField = SomeOnBehalfOfLocationID
  unpackAnyField = \case
    SomeOnBehalfOfLocationID f -> Just f
    _ -> Nothing

instance IsAnyField DeliverToLocationID where
  packAnyField = SomeDeliverToLocationID
  unpackAnyField = \case
    SomeDeliverToLocationID f -> Just f
    _ -> Nothing

instance IsAnyField XmlData where
  packAnyField = SomeXmlData
  unpackAnyField = \case
    SomeXmlData f -> Just f
    _ -> Nothing

instance IsAnyField MessageEncoding where
  packAnyField = SomeMessageEncoding
  unpackAnyField = \case
    SomeMessageEncoding f -> Just f
    _ -> Nothing

instance IsAnyField LastMsgSeqNumProcessed where
  packAnyField = SomeLastMsgSeqNumProcessed
  unpackAnyField = \case
    SomeLastMsgSeqNumProcessed f -> Just f
    _ -> Nothing

instance IsAnyField RefMsgType where
  packAnyField = SomeRefMsgType
  unpackAnyField = \case
    SomeRefMsgType f -> Just f
    _ -> Nothing

instance IsAnyField MaxMessageSize where
  packAnyField = SomeMaxMessageSize
  unpackAnyField = \case
    SomeMaxMessageSize f -> Just f
    _ -> Nothing

instance IsAnyField NoMsgTypes where
  packAnyField = SomeNoMsgTypes
  unpackAnyField = \case
    SomeNoMsgTypes f -> Just f
    _ -> Nothing

instance IsAnyField MsgDirection where
  packAnyField = SomeMsgDirection
  unpackAnyField = \case
    SomeMsgDirection f -> Just f
    _ -> Nothing

instance IsAnyField TestMessageIndicator where
  packAnyField = SomeTestMessageIndicator
  unpackAnyField = \case
    SomeTestMessageIndicator f -> Just f
    _ -> Nothing

instance IsAnyField Username where
  packAnyField = SomeUsername
  unpackAnyField = \case
    SomeUsername f -> Just f
    _ -> Nothing

instance IsAnyField Password where
  packAnyField = SomePassword
  unpackAnyField = \case
    SomePassword f -> Just f
    _ -> Nothing

instance IsAnyField NoHops where
  packAnyField = SomeNoHops
  unpackAnyField = \case
    SomeNoHops f -> Just f
    _ -> Nothing

instance IsAnyField HopCompID where
  packAnyField = SomeHopCompID
  unpackAnyField = \case
    SomeHopCompID f -> Just f
    _ -> Nothing

instance IsAnyField HopSendingTime where
  packAnyField = SomeHopSendingTime
  unpackAnyField = \case
    SomeHopSendingTime f -> Just f
    _ -> Nothing

instance IsAnyField HopRefID where
  packAnyField = SomeHopRefID
  unpackAnyField = \case
    SomeHopRefID f -> Just f
    _ -> Nothing

instance IsAnyField NextExpectedMsgSeqNum where
  packAnyField = SomeNextExpectedMsgSeqNum
  unpackAnyField = \case
    SomeNextExpectedMsgSeqNum f -> Just f
    _ -> Nothing
