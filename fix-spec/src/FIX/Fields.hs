{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE ScopedTypeVariables #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields
  ( AnyField (..),
    anyFieldP,
    anyFieldB,
    IsAnyField (..),
    module X,
  )
where

import Data.ByteString (ByteString)
import qualified Data.ByteString.Builder as ByteString
import Data.Validity
import Data.Void (Void)
import FIX.Core
import FIX.Fields.BeginString as X
import FIX.Fields.BodyLength as X
import FIX.Fields.CheckSum as X
import FIX.Fields.CstmApplVerID as X
import FIX.Fields.EncryptMethod as X
import FIX.Fields.Headline as X
import FIX.Fields.HeartBtInt as X
import FIX.Fields.MsgSeqNum as X
import FIX.Fields.MsgType as X
import FIX.Fields.NoLinesOfText as X
import FIX.Fields.NoRoutingIDs as X
import FIX.Fields.Password as X
import FIX.Fields.RefMsgType as X
import FIX.Fields.RefSeqNum as X
import FIX.Fields.RefTagID as X
import FIX.Fields.ResetSeqNumFlag as X
import FIX.Fields.RoutingID as X
import FIX.Fields.RoutingType as X
import FIX.Fields.SenderCompID as X
import FIX.Fields.SenderSubID as X
import FIX.Fields.SendingTime as X
import FIX.Fields.SessionRejectReason as X
import FIX.Fields.TargetCompID as X
import FIX.Fields.TestReqID as X
import FIX.Fields.Text as X
import GHC.Generics (Generic)
import Text.Megaparsec
import Text.Megaparsec.Byte.Lexer

data AnyField
  = SomeCstmApplVerID !CstmApplVerID
  | SomeBeginString !BeginString
  | SomeBodyLength !BodyLength
  | SomeCheckSum !CheckSum
  | SomeNoLinesOfText !NoLinesOfText
  | SomeMsgSeqNum !MsgSeqNum
  | SomeMsgType !MsgType
  | SomeRefSeqNum !RefSeqNum
  | SomeSenderCompID !SenderCompID
  | SomeSenderSubID !SenderSubID
  | SomeSendingTime !SendingTime
  | SomeTargetCompID !TargetCompID
  | SomeText !Text
  | SomeEncryptMethod !EncryptMethod
  | SomeHeartBtInt !HeartBtInt
  | SomeTestReqID !TestReqID
  | SomeResetSeqNumFlag !ResetSeqNumFlag
  | SomeHeadline !Headline
  | SomeNoRoutingIDs !NoRoutingIDs
  | SomeRoutingType !RoutingType
  | SomeRoutingID !RoutingID
  | SomeRefTagID !RefTagID
  | SomeRefMsgType !RefMsgType
  | SomeSessionRejectReason !SessionRejectReason
  | SomePassword !Password
  deriving stock (Show, Eq, Generic)

instance Validity AnyField

anyFieldB :: AnyField -> ByteString.Builder
anyFieldB = \case
  SomeCstmApplVerID f -> fieldB f
  SomeBeginString f -> fieldB f
  SomeBodyLength f -> fieldB f
  SomeCheckSum f -> fieldB f
  SomeNoLinesOfText f -> fieldB f
  SomeMsgSeqNum f -> fieldB f
  SomeMsgType f -> fieldB f
  SomeRefSeqNum f -> fieldB f
  SomeSenderCompID f -> fieldB f
  SomeSenderSubID f -> fieldB f
  SomeSendingTime f -> fieldB f
  SomeTargetCompID f -> fieldB f
  SomeText f -> fieldB f
  SomeEncryptMethod f -> fieldB f
  SomeHeartBtInt f -> fieldB f
  SomeTestReqID f -> fieldB f
  SomeResetSeqNumFlag f -> fieldB f
  SomeHeadline f -> fieldB f
  SomeNoRoutingIDs f -> fieldB f
  SomeRoutingType f -> fieldB f
  SomeRoutingID f -> fieldB f
  SomeRefTagID f -> fieldB f
  SomeRefMsgType f -> fieldB f
  SomeSessionRejectReason f -> fieldB f
  SomePassword f -> fieldB f

anyFieldP :: Parsec Void ByteString AnyField
anyFieldP = do
  tag <- decimal
  let fp :: forall f. (IsField f) => Parsec Void ByteString f
      fp = fieldP tag
  case tag of
    1129 -> SomeCstmApplVerID <$> fp
    8 -> SomeBeginString <$> fp
    9 -> SomeBodyLength <$> fp
    10 -> SomeCheckSum <$> fp
    33 -> SomeNoLinesOfText <$> fp
    34 -> SomeMsgSeqNum <$> fp
    35 -> SomeMsgType <$> fp
    45 -> SomeRefSeqNum <$> fp
    49 -> SomeSenderCompID <$> fp
    50 -> SomeSenderSubID <$> fp
    52 -> SomeSendingTime <$> fp
    56 -> SomeTargetCompID <$> fp
    58 -> SomeText <$> fp
    98 -> SomeEncryptMethod <$> fp
    108 -> SomeHeartBtInt <$> fp
    112 -> SomeTestReqID <$> fp
    141 -> SomeResetSeqNumFlag <$> fp
    148 -> SomeHeadline <$> fp
    215 -> SomeNoRoutingIDs <$> fp
    216 -> SomeRoutingType <$> fp
    217 -> SomeRoutingID <$> fp
    371 -> SomeRefTagID <$> fp
    372 -> SomeRefMsgType <$> fp
    373 -> SomeSessionRejectReason <$> fp
    554 -> SomePassword <$> fp
    _ -> fail ("Unknown field tag: " <> show tag)

class (IsField a) => IsAnyField a where
  unpackAnyField :: AnyField -> Maybe a
  packAnyField :: a -> AnyField

instance IsAnyField CstmApplVerID where
  packAnyField = SomeCstmApplVerID
  unpackAnyField = \case
    SomeCstmApplVerID f -> Just f
    _ -> Nothing

instance IsAnyField BeginString where
  packAnyField = SomeBeginString
  unpackAnyField = \case
    SomeBeginString f -> Just f
    _ -> Nothing

instance IsAnyField BodyLength where
  packAnyField = SomeBodyLength
  unpackAnyField = \case
    SomeBodyLength f -> Just f
    _ -> Nothing

instance IsAnyField CheckSum where
  packAnyField = SomeCheckSum
  unpackAnyField = \case
    SomeCheckSum f -> Just f
    _ -> Nothing

instance IsAnyField NoLinesOfText where
  packAnyField = SomeNoLinesOfText
  unpackAnyField = \case
    SomeNoLinesOfText f -> Just f
    _ -> Nothing

instance IsAnyField MsgSeqNum where
  packAnyField = SomeMsgSeqNum
  unpackAnyField = \case
    SomeMsgSeqNum f -> Just f
    _ -> Nothing

instance IsAnyField MsgType where
  packAnyField = SomeMsgType
  unpackAnyField = \case
    SomeMsgType f -> Just f
    _ -> Nothing

instance IsAnyField RefSeqNum where
  packAnyField = SomeRefSeqNum
  unpackAnyField = \case
    SomeRefSeqNum f -> Just f
    _ -> Nothing

instance IsAnyField SenderCompID where
  packAnyField = SomeSenderCompID
  unpackAnyField = \case
    SomeSenderCompID f -> Just f
    _ -> Nothing

instance IsAnyField SenderSubID where
  packAnyField = SomeSenderSubID
  unpackAnyField = \case
    SomeSenderSubID f -> Just f
    _ -> Nothing

instance IsAnyField SendingTime where
  packAnyField = SomeSendingTime
  unpackAnyField = \case
    SomeSendingTime f -> Just f
    _ -> Nothing

instance IsAnyField TargetCompID where
  packAnyField = SomeTargetCompID
  unpackAnyField = \case
    SomeTargetCompID f -> Just f
    _ -> Nothing

instance IsAnyField Text where
  packAnyField = SomeText
  unpackAnyField = \case
    SomeText f -> Just f
    _ -> Nothing

instance IsAnyField EncryptMethod where
  packAnyField = SomeEncryptMethod
  unpackAnyField = \case
    SomeEncryptMethod f -> Just f
    _ -> Nothing

instance IsAnyField HeartBtInt where
  packAnyField = SomeHeartBtInt
  unpackAnyField = \case
    SomeHeartBtInt f -> Just f
    _ -> Nothing

instance IsAnyField TestReqID where
  packAnyField = SomeTestReqID
  unpackAnyField = \case
    SomeTestReqID f -> Just f
    _ -> Nothing

instance IsAnyField ResetSeqNumFlag where
  packAnyField = SomeResetSeqNumFlag
  unpackAnyField = \case
    SomeResetSeqNumFlag f -> Just f
    _ -> Nothing

instance IsAnyField Headline where
  packAnyField = SomeHeadline
  unpackAnyField = \case
    SomeHeadline f -> Just f
    _ -> Nothing

instance IsAnyField NoRoutingIDs where
  packAnyField = SomeNoRoutingIDs
  unpackAnyField = \case
    SomeNoRoutingIDs f -> Just f
    _ -> Nothing

instance IsAnyField RoutingType where
  packAnyField = SomeRoutingType
  unpackAnyField = \case
    SomeRoutingType f -> Just f
    _ -> Nothing

instance IsAnyField RoutingID where
  packAnyField = SomeRoutingID
  unpackAnyField = \case
    SomeRoutingID f -> Just f
    _ -> Nothing

instance IsAnyField RefTagID where
  packAnyField = SomeRefTagID
  unpackAnyField = \case
    SomeRefTagID f -> Just f
    _ -> Nothing

instance IsAnyField RefMsgType where
  packAnyField = SomeRefMsgType
  unpackAnyField = \case
    SomeRefMsgType f -> Just f
    _ -> Nothing

instance IsAnyField SessionRejectReason where
  packAnyField = SomeSessionRejectReason
  unpackAnyField = \case
    SomeSessionRejectReason f -> Just f
    _ -> Nothing

instance IsAnyField Password where
  packAnyField = SomePassword
  unpackAnyField = \case
    SomePassword f -> Just f
    _ -> Nothing
