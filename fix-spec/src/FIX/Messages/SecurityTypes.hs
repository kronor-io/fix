{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.SecurityTypes where

import Data.Validity
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.LastFragment
import FIX.Fields.SecurityReqID
import FIX.Fields.SecurityResponseID
import FIX.Fields.SecurityResponseType
import FIX.Fields.SubscriptionRequestType
import FIX.Fields.Text
import FIX.Fields.TotNoSecurityTypes
import FIX.Fields.TradingSessionID
import FIX.Fields.TradingSessionSubID
import GHC.Generics (Generic)

-- MessageSpec {messageName = "SecurityTypes", messageType = "w", messageCategory = "app", messagePieces = [MessagePieceField "SecurityReqID" True,MessagePieceField "SecurityResponseID" True,MessagePieceField "SecurityResponseType" True,MessagePieceField "TotNoSecurityTypes" False,MessagePieceField "LastFragment" False,MessagePieceComponent "SecTypesGrp" False,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False,MessagePieceField "TradingSessionID" False,MessagePieceField "TradingSessionSubID" False,MessagePieceField "SubscriptionRequestType" False]}
data SecurityTypes = SecurityTypes
  { securityTypesSecurityReqID :: !SecurityReqID,
    securityTypesSecurityResponseID :: !SecurityResponseID,
    securityTypesSecurityResponseType :: !SecurityResponseType,
    securityTypesTotNoSecurityTypes :: !(Maybe TotNoSecurityTypes),
    securityTypesLastFragment :: !(Maybe LastFragment),
    securityTypesText :: !(Maybe Text),
    securityTypesEncodedTextLen :: !(Maybe EncodedTextLen),
    securityTypesEncodedText :: !(Maybe EncodedText),
    securityTypesTradingSessionID :: !(Maybe TradingSessionID),
    securityTypesTradingSessionSubID :: !(Maybe TradingSessionSubID),
    securityTypesSubscriptionRequestType :: !(Maybe SubscriptionRequestType)
  }
  deriving stock (Show, Eq, Generic)

instance Validity SecurityTypes
