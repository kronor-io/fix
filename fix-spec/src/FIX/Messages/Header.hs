{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.Header where

import Data.Validity
import FIX.Components.Class
import FIX.Fields.BeginString
import FIX.Fields.BodyLength
import FIX.Fields.CstmApplVerID
import FIX.Fields.MsgSeqNum
import FIX.Fields.MsgType
import FIX.Fields.SenderCompID
import FIX.Fields.SenderSubID
import FIX.Fields.SendingTime
import FIX.Fields.TargetCompID
import FIX.Groups.Class
import GHC.Generics (Generic)

data Header = Header
  { headerBeginString :: !BeginString,
    headerBodyLength :: !BodyLength,
    headerMsgType :: !MsgType,
    headerMsgSeqNum :: !MsgSeqNum,
    headerSenderCompID :: !SenderCompID,
    headerSenderSubID :: !SenderSubID,
    headerSendingTime :: !SendingTime,
    headerTargetCompID :: !TargetCompID,
    headerCstmApplVerID :: !(Maybe CstmApplVerID)
  }
  deriving stock (Show, Eq, Generic)

instance Validity Header

instance IsComponent Header where
  toComponentFields ((Header {..})) =
    mconcat
      [ requiredFieldB headerBeginString,
        requiredFieldB headerBodyLength,
        requiredFieldB headerMsgType,
        requiredFieldB headerMsgSeqNum,
        requiredFieldB headerSenderCompID,
        requiredFieldB headerSenderSubID,
        requiredFieldB headerSendingTime,
        requiredFieldB headerTargetCompID,
        optionalFieldB headerCstmApplVerID
      ]
  fromComponentFields = do
    headerBeginString <- requiredFieldP
    headerBodyLength <- requiredFieldP
    headerMsgType <- requiredFieldP
    headerMsgSeqNum <- requiredFieldP
    headerSenderCompID <- requiredFieldP
    headerSenderSubID <- requiredFieldP
    headerSendingTime <- requiredFieldP
    headerTargetCompID <- requiredFieldP
    headerCstmApplVerID <- optionalFieldP
    pure (Header {..})

makeHeader :: BeginString -> (BodyLength -> (MsgType -> (MsgSeqNum -> (SenderCompID -> (SenderSubID -> (SendingTime -> (TargetCompID -> Header)))))))
makeHeader headerBeginString headerBodyLength headerMsgType headerMsgSeqNum headerSenderCompID headerSenderSubID headerSendingTime headerTargetCompID =
  let headerCstmApplVerID = Nothing
   in (Header {..})
