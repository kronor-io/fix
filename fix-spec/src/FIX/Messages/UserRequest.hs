{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.UserRequest where

import Data.Validity
import FIX.Fields.NewPassword
import FIX.Fields.Password
import FIX.Fields.RawData
import FIX.Fields.RawDataLength
import FIX.Fields.UserRequestID
import FIX.Fields.UserRequestType
import FIX.Fields.Username
import GHC.Generics (Generic)

-- MessageSpec {messageName = "UserRequest", messageType = "BE", messageCategory = "app", messagePieces = [MessagePieceField "UserRequestID" True,MessagePieceField "UserRequestType" True,MessagePieceField "Username" True,MessagePieceField "Password" False,MessagePieceField "NewPassword" False,MessagePieceField "RawDataLength" False,MessagePieceField "RawData" False]}
data UserRequest = UserRequest
  { userRequestUserRequestID :: !UserRequestID,
    userRequestUserRequestType :: !UserRequestType,
    userRequestUsername :: !Username,
    userRequestPassword :: !(Maybe Password),
    userRequestNewPassword :: !(Maybe NewPassword),
    userRequestRawDataLength :: !(Maybe RawDataLength),
    userRequestRawData :: !(Maybe RawData)
  }
  deriving stock (Show, Eq, Generic)

instance Validity UserRequest
