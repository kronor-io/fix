{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.ListExecute where

import Data.Validity
import FIX.Fields.BidID
import FIX.Fields.ClientBidID
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.ListID
import FIX.Fields.Text
import FIX.Fields.TransactTime
import GHC.Generics (Generic)

-- MessageSpec {messageName = "ListExecute", messageType = "L", messageCategory = "app", messagePieces = [MessagePieceField "ListID" True,MessagePieceField "ClientBidID" False,MessagePieceField "BidID" False,MessagePieceField "TransactTime" True,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False]}
data ListExecute = ListExecute
  { listExecuteListID :: !ListID,
    listExecuteClientBidID :: !(Maybe ClientBidID),
    listExecuteBidID :: !(Maybe BidID),
    listExecuteTransactTime :: !TransactTime,
    listExecuteText :: !(Maybe Text),
    listExecuteEncodedTextLen :: !(Maybe EncodedTextLen),
    listExecuteEncodedText :: !(Maybe EncodedText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity ListExecute
