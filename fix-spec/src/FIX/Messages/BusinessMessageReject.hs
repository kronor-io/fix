{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.BusinessMessageReject where

import Data.Validity
import FIX.Fields.BusinessRejectReason
import FIX.Fields.BusinessRejectRefID
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.RefMsgType
import FIX.Fields.RefSeqNum
import FIX.Fields.Text
import GHC.Generics (Generic)

-- MessageSpec {messageName = "BusinessMessageReject", messageType = "j", messageCategory = "app", messagePieces = [MessagePieceField "RefSeqNum" False,MessagePieceField "RefMsgType" True,MessagePieceField "BusinessRejectRefID" False,MessagePieceField "BusinessRejectReason" True,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False]}
data BusinessMessageReject = BusinessMessageReject
  { businessMessageRejectRefSeqNum :: !(Maybe RefSeqNum),
    businessMessageRejectRefMsgType :: !RefMsgType,
    businessMessageRejectBusinessRejectRefID :: !(Maybe BusinessRejectRefID),
    businessMessageRejectBusinessRejectReason :: !BusinessRejectReason,
    businessMessageRejectText :: !(Maybe Text),
    businessMessageRejectEncodedTextLen :: !(Maybe EncodedTextLen),
    businessMessageRejectEncodedText :: !(Maybe EncodedText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity BusinessMessageReject
