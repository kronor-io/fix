{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.CollateralResponse where

import Data.Validity
import FIX.Fields.Account
import FIX.Fields.AccountType
import FIX.Fields.AccruedInterestAmt
import FIX.Fields.CashOutstanding
import FIX.Fields.ClOrdID
import FIX.Fields.CollAsgnID
import FIX.Fields.CollAsgnReason
import FIX.Fields.CollAsgnRejectReason
import FIX.Fields.CollAsgnRespType
import FIX.Fields.CollAsgnTransType
import FIX.Fields.CollReqID
import FIX.Fields.CollRespID
import FIX.Fields.Currency
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.EndAccruedInterestAmt
import FIX.Fields.EndCash
import FIX.Fields.MarginExcess
import FIX.Fields.OrderID
import FIX.Fields.Price
import FIX.Fields.PriceType
import FIX.Fields.QtyType
import FIX.Fields.Quantity
import FIX.Fields.SecondaryClOrdID
import FIX.Fields.SecondaryOrderID
import FIX.Fields.SettlDate
import FIX.Fields.Side
import FIX.Fields.StartCash
import FIX.Fields.Text
import FIX.Fields.TotalNetValue
import FIX.Fields.TransactTime
import GHC.Generics (Generic)

-- MessageSpec {messageName = "CollateralResponse", messageType = "AZ", messageCategory = "app", messagePieces = [MessagePieceField "CollRespID" True,MessagePieceField "CollAsgnID" True,MessagePieceField "CollReqID" False,MessagePieceField "CollAsgnReason" True,MessagePieceField "CollAsgnTransType" False,MessagePieceField "CollAsgnRespType" True,MessagePieceField "CollAsgnRejectReason" False,MessagePieceField "TransactTime" True,MessagePieceComponent "Parties" False,MessagePieceField "Account" False,MessagePieceField "AccountType" False,MessagePieceField "ClOrdID" False,MessagePieceField "OrderID" False,MessagePieceField "SecondaryOrderID" False,MessagePieceField "SecondaryClOrdID" False,MessagePieceComponent "ExecCollGrp" False,MessagePieceComponent "TrdCollGrp" False,MessagePieceComponent "Instrument" False,MessagePieceComponent "FinancingDetails" False,MessagePieceField "SettlDate" False,MessagePieceField "Quantity" False,MessagePieceField "QtyType" False,MessagePieceField "Currency" False,MessagePieceComponent "InstrmtLegGrp" False,MessagePieceComponent "UndInstrmtCollGrp" False,MessagePieceField "MarginExcess" False,MessagePieceField "TotalNetValue" False,MessagePieceField "CashOutstanding" False,MessagePieceComponent "TrdRegTimestamps" False,MessagePieceField "Side" False,MessagePieceComponent "MiscFeesGrp" False,MessagePieceField "Price" False,MessagePieceField "PriceType" False,MessagePieceField "AccruedInterestAmt" False,MessagePieceField "EndAccruedInterestAmt" False,MessagePieceField "StartCash" False,MessagePieceField "EndCash" False,MessagePieceComponent "SpreadOrBenchmarkCurveData" False,MessagePieceComponent "Stipulations" False,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False]}
data CollateralResponse = CollateralResponse
  { collateralResponseCollRespID :: !CollRespID,
    collateralResponseCollAsgnID :: !CollAsgnID,
    collateralResponseCollReqID :: !(Maybe CollReqID),
    collateralResponseCollAsgnReason :: !CollAsgnReason,
    collateralResponseCollAsgnTransType :: !(Maybe CollAsgnTransType),
    collateralResponseCollAsgnRespType :: !CollAsgnRespType,
    collateralResponseCollAsgnRejectReason :: !(Maybe CollAsgnRejectReason),
    collateralResponseTransactTime :: !TransactTime,
    collateralResponseAccount :: !(Maybe Account),
    collateralResponseAccountType :: !(Maybe AccountType),
    collateralResponseClOrdID :: !(Maybe ClOrdID),
    collateralResponseOrderID :: !(Maybe OrderID),
    collateralResponseSecondaryOrderID :: !(Maybe SecondaryOrderID),
    collateralResponseSecondaryClOrdID :: !(Maybe SecondaryClOrdID),
    collateralResponseSettlDate :: !(Maybe SettlDate),
    collateralResponseQuantity :: !(Maybe Quantity),
    collateralResponseQtyType :: !(Maybe QtyType),
    collateralResponseCurrency :: !(Maybe Currency),
    collateralResponseMarginExcess :: !(Maybe MarginExcess),
    collateralResponseTotalNetValue :: !(Maybe TotalNetValue),
    collateralResponseCashOutstanding :: !(Maybe CashOutstanding),
    collateralResponseSide :: !(Maybe Side),
    collateralResponsePrice :: !(Maybe Price),
    collateralResponsePriceType :: !(Maybe PriceType),
    collateralResponseAccruedInterestAmt :: !(Maybe AccruedInterestAmt),
    collateralResponseEndAccruedInterestAmt :: !(Maybe EndAccruedInterestAmt),
    collateralResponseStartCash :: !(Maybe StartCash),
    collateralResponseEndCash :: !(Maybe EndCash),
    collateralResponseText :: !(Maybe Text),
    collateralResponseEncodedTextLen :: !(Maybe EncodedTextLen),
    collateralResponseEncodedText :: !(Maybe EncodedText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity CollateralResponse
