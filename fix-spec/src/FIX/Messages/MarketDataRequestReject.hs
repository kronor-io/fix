{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.MarketDataRequestReject where

import Data.Validity
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.MDReqID
import FIX.Fields.MDReqRejReason
import FIX.Fields.Text
import GHC.Generics (Generic)

-- MessageSpec {messageName = "MarketDataRequestReject", messageType = "Y", messageCategory = "app", messagePieces = [MessagePieceField "MDReqID" True,MessagePieceField "MDReqRejReason" False,MessagePieceComponent "MDRjctGrp" False,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False]}
data MarketDataRequestReject = MarketDataRequestReject
  { marketDataRequestRejectMDReqID :: !MDReqID,
    marketDataRequestRejectMDReqRejReason :: !(Maybe MDReqRejReason),
    marketDataRequestRejectText :: !(Maybe Text),
    marketDataRequestRejectEncodedTextLen :: !(Maybe EncodedTextLen),
    marketDataRequestRejectEncodedText :: !(Maybe EncodedText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity MarketDataRequestReject
