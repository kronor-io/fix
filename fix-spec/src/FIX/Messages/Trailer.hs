{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE RecordWildCards #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.Trailer where

import Data.Validity
import FIX.Components.Class
import FIX.Fields.CheckSum
import FIX.Fields.Signature
import FIX.Fields.SignatureLength
import GHC.Generics (Generic)

data Trailer = Trailer
  { trailerSignatureLength :: !(Maybe SignatureLength),
    trailerSignature :: !(Maybe Signature),
    trailerCheckSum :: !CheckSum
  }
  deriving stock (Show, Eq, Generic)

instance Validity Trailer

instance IsComponent Trailer where
  toComponentFields ((Trailer {..})) =
    concat
      [ optionalFieldB trailerSignatureLength,
        optionalFieldB trailerSignature,
        requiredFieldB trailerCheckSum
      ]
  fromComponentFields = do
    trailerSignatureLength <- optionalFieldP
    trailerSignature <- optionalFieldP
    trailerCheckSum <- requiredFieldP
    pure (Trailer {..})
