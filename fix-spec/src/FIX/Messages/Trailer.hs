{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE RecordWildCards #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.Trailer where

import Data.Maybe
import Data.Validity
import FIX.Core
import FIX.Fields.CheckSum
import FIX.Fields.Signature
import FIX.Fields.SignatureLength
import FIX.Messages.Class
import GHC.Generics (Generic)

data Trailer = Trailer
  { trailerSignatureLength :: !(Maybe SignatureLength),
    trailerSignature :: !(Maybe Signature),
    trailerCheckSum :: !CheckSum
  }
  deriving stock (Show, Eq, Generic)

instance Validity Trailer

renderTrailer :: Trailer -> [Field]
renderTrailer ((Trailer {..})) =
  catMaybes
    [ optionalFieldB trailerSignatureLength,
      optionalFieldB trailerSignature,
      requiredFieldB trailerCheckSum
    ]

parseTrailer :: MessageP Trailer
parseTrailer = do
  trailerSignatureLength <- optionalFieldP
  trailerSignature <- optionalFieldP
  trailerCheckSum <- requiredFieldP
  pure (Trailer {..})
