{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.Quote where

import Data.List.NonEmpty (NonEmpty)
import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.Account
import FIX.Fields.BidExAnteCost
import FIX.Fields.BidExAnteCostPercentage
import FIX.Fields.BidInterestAtMaturity
import FIX.Fields.BidPx
import FIX.Fields.BidSpotRate
import FIX.Fields.Currency
import FIX.Fields.Issuer
import FIX.Fields.MidPx
import FIX.Fields.MidPx2
import FIX.Fields.MidSpotRate
import FIX.Fields.MsgType
import FIX.Fields.OfferExAnteCost
import FIX.Fields.OfferExAnteCostPercentage
import FIX.Fields.OfferInterestAtMaturity
import FIX.Fields.OfferPx
import FIX.Fields.OfferSpotRate
import FIX.Fields.OptionDate
import FIX.Fields.OptionPeriod
import FIX.Fields.OrderQty
import FIX.Fields.OrderQty2
import FIX.Fields.ProductType
import FIX.Fields.QuoteID
import FIX.Fields.QuoteReqID
import FIX.Fields.QuoteType
import FIX.Fields.RefSpotDate
import FIX.Fields.Symbol
import FIX.Fields.ValidUntilTime
import FIX.Groups.Class
import FIX.Groups.LegsGroupElem
import FIX.Messages.Class
import GHC.Generics (Generic)

-- | MessageSpec
--   { messageName = "Quote"
--   , messageType = "S"
--   , messageCategory = "app"
--   , messagePieces =
--       [ MessagePieceField "Account" False
--       , MessagePieceField "Currency" False
--       , MessagePieceField "OrderQty" True
--       , MessagePieceField "Symbol" True
--       , MessagePieceField "ValidUntilTime" False
--       , MessagePieceField "Issuer" True
--       , MessagePieceField "QuoteType" False
--       , MessagePieceField "QuoteID" True
--       , MessagePieceField "QuoteReqID" True
--       , MessagePieceField "BidPx" False
--       , MessagePieceField "OfferPx" False
--       , MessagePieceField "BidSpotRate" False
--       , MessagePieceField "OfferSpotRate" False
--       , MessagePieceField "OrderQty2" False
--       , MessagePieceGroup
--           GroupSpec
--             { groupName = "NoLegs"
--             , groupNumberField = "NoLegs"
--             , groupPieces =
--                 [ MessagePieceField "LegSymbol" True
--                 , MessagePieceField "LegMaturityDate" False
--                 , MessagePieceField "LegQty" True
--                 , MessagePieceField "LegSettlDate" False
--                 , MessagePieceField "LegBidPx" False
--                 , MessagePieceField "LegOfferPx" False
--                 , MessagePieceField "LegRefID" True
--                 , MessagePieceField "LegMidPx" False
--                 , MessagePieceField "BidPx2" False
--                 , MessagePieceField "OfferPx2" False
--                 , MessagePieceField "LegBidExAnteCost" False
--                 , MessagePieceField "LegOfferExAnteCost" False
--                 , MessagePieceField "LegBidExAnteCostPercentage" False
--                 , MessagePieceField "LegOfferExAnteCostPercentage" False
--                 ]
--             }
--           False
--       , MessagePieceField "RefSpotDate" False
--       , MessagePieceField "ProductType" False
--       , MessagePieceField "MidPx" False
--       , MessagePieceField "MidSpotRate" False
--       , MessagePieceField "MidPx2" False
--       , MessagePieceField "BidInterestAtMaturity" False
--       , MessagePieceField "OfferInterestAtMaturity" False
--       , MessagePieceField "OptionPeriod" False
--       , MessagePieceField "OptionDate" False
--       , MessagePieceField "BidExAnteCost" False
--       , MessagePieceField "OfferExAnteCost" False
--       , MessagePieceField "BidExAnteCostPercentage" False
--       , MessagePieceField "OfferExAnteCostPercentage" False
--       ]
--   }
data Quote = Quote
  { quoteAccount :: !(Maybe Account),
    quoteCurrency :: !(Maybe Currency),
    quoteOrderQty :: !OrderQty,
    quoteSymbol :: !Symbol,
    quoteValidUntilTime :: !(Maybe ValidUntilTime),
    quoteIssuer :: !Issuer,
    quoteQuoteType :: !(Maybe QuoteType),
    quoteQuoteID :: !QuoteID,
    quoteQuoteReqID :: !QuoteReqID,
    quoteBidPx :: !(Maybe BidPx),
    quoteOfferPx :: !(Maybe OfferPx),
    quoteBidSpotRate :: !(Maybe BidSpotRate),
    quoteOfferSpotRate :: !(Maybe OfferSpotRate),
    quoteOrderQty2 :: !(Maybe OrderQty2),
    quoteLegsGroup :: ![LegsGroupElem],
    quoteRefSpotDate :: !(Maybe RefSpotDate),
    quoteProductType :: !(Maybe ProductType),
    quoteMidPx :: !(Maybe MidPx),
    quoteMidSpotRate :: !(Maybe MidSpotRate),
    quoteMidPx2 :: !(Maybe MidPx2),
    quoteBidInterestAtMaturity :: !(Maybe BidInterestAtMaturity),
    quoteOfferInterestAtMaturity :: !(Maybe OfferInterestAtMaturity),
    quoteOptionPeriod :: !(Maybe OptionPeriod),
    quoteOptionDate :: !(Maybe OptionDate),
    quoteBidExAnteCost :: !(Maybe BidExAnteCost),
    quoteOfferExAnteCost :: !(Maybe OfferExAnteCost),
    quoteBidExAnteCostPercentage :: !(Maybe BidExAnteCostPercentage),
    quoteOfferExAnteCostPercentage :: !(Maybe OfferExAnteCostPercentage)
  }
  deriving stock (Show, Eq, Generic)

instance Validity Quote

instance IsComponent Quote where
  toComponentFields ((Quote {..})) =
    mconcat
      [ optionalFieldB quoteAccount,
        optionalFieldB quoteCurrency,
        requiredFieldB quoteOrderQty,
        requiredFieldB quoteSymbol,
        optionalFieldB quoteValidUntilTime,
        requiredFieldB quoteIssuer,
        optionalFieldB quoteQuoteType,
        requiredFieldB quoteQuoteID,
        requiredFieldB quoteQuoteReqID,
        optionalFieldB quoteBidPx,
        optionalFieldB quoteOfferPx,
        optionalFieldB quoteBidSpotRate,
        optionalFieldB quoteOfferSpotRate,
        optionalFieldB quoteOrderQty2,
        optionalGroupB quoteLegsGroup,
        optionalFieldB quoteRefSpotDate,
        optionalFieldB quoteProductType,
        optionalFieldB quoteMidPx,
        optionalFieldB quoteMidSpotRate,
        optionalFieldB quoteMidPx2,
        optionalFieldB quoteBidInterestAtMaturity,
        optionalFieldB quoteOfferInterestAtMaturity,
        optionalFieldB quoteOptionPeriod,
        optionalFieldB quoteOptionDate,
        optionalFieldB quoteBidExAnteCost,
        optionalFieldB quoteOfferExAnteCost,
        optionalFieldB quoteBidExAnteCostPercentage,
        optionalFieldB quoteOfferExAnteCostPercentage
      ]
  fromComponentFields = do
    quoteAccount <- optionalFieldP
    quoteCurrency <- optionalFieldP
    quoteOrderQty <- requiredFieldP
    quoteSymbol <- requiredFieldP
    quoteValidUntilTime <- optionalFieldP
    quoteIssuer <- requiredFieldP
    quoteQuoteType <- optionalFieldP
    quoteQuoteID <- requiredFieldP
    quoteQuoteReqID <- requiredFieldP
    quoteBidPx <- optionalFieldP
    quoteOfferPx <- optionalFieldP
    quoteBidSpotRate <- optionalFieldP
    quoteOfferSpotRate <- optionalFieldP
    quoteOrderQty2 <- optionalFieldP
    quoteLegsGroup <- optionalGroupP
    quoteRefSpotDate <- optionalFieldP
    quoteProductType <- optionalFieldP
    quoteMidPx <- optionalFieldP
    quoteMidSpotRate <- optionalFieldP
    quoteMidPx2 <- optionalFieldP
    quoteBidInterestAtMaturity <- optionalFieldP
    quoteOfferInterestAtMaturity <- optionalFieldP
    quoteOptionPeriod <- optionalFieldP
    quoteOptionDate <- optionalFieldP
    quoteBidExAnteCost <- optionalFieldP
    quoteOfferExAnteCost <- optionalFieldP
    quoteBidExAnteCostPercentage <- optionalFieldP
    quoteOfferExAnteCostPercentage <- optionalFieldP
    pure (Quote {..})

instance IsMessage Quote where
  messageType Proxy = MsgTypeQuote

makeQuote :: OrderQty -> (Symbol -> (Issuer -> (QuoteID -> (QuoteReqID -> Quote))))
makeQuote quoteOrderQty quoteSymbol quoteIssuer quoteQuoteID quoteQuoteReqID =
  let quoteAccount = Nothing
      quoteCurrency = Nothing
      quoteValidUntilTime = Nothing
      quoteQuoteType = Nothing
      quoteBidPx = Nothing
      quoteOfferPx = Nothing
      quoteBidSpotRate = Nothing
      quoteOfferSpotRate = Nothing
      quoteOrderQty2 = Nothing
      quoteLegsGroup = []
      quoteRefSpotDate = Nothing
      quoteProductType = Nothing
      quoteMidPx = Nothing
      quoteMidSpotRate = Nothing
      quoteMidPx2 = Nothing
      quoteBidInterestAtMaturity = Nothing
      quoteOfferInterestAtMaturity = Nothing
      quoteOptionPeriod = Nothing
      quoteOptionDate = Nothing
      quoteBidExAnteCost = Nothing
      quoteOfferExAnteCost = Nothing
      quoteBidExAnteCostPercentage = Nothing
      quoteOfferExAnteCostPercentage = Nothing
   in (Quote {..})
