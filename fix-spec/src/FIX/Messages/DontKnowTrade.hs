{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.DontKnowTrade where

import Data.Validity
import FIX.Fields.DKReason
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.ExecID
import FIX.Fields.LastPx
import FIX.Fields.LastQty
import FIX.Fields.OrderID
import FIX.Fields.SecondaryOrderID
import FIX.Fields.Side
import FIX.Fields.Text
import GHC.Generics (Generic)

-- MessageSpec {messageName = "DontKnowTrade", messageType = "Q", messageCategory = "app", messagePieces = [MessagePieceField "OrderID" True,MessagePieceField "SecondaryOrderID" False,MessagePieceField "ExecID" True,MessagePieceField "DKReason" True,MessagePieceComponent "Instrument" True,MessagePieceComponent "UndInstrmtGrp" False,MessagePieceComponent "InstrmtLegGrp" False,MessagePieceField "Side" True,MessagePieceComponent "OrderQtyData" True,MessagePieceField "LastQty" False,MessagePieceField "LastPx" False,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False]}
data DontKnowTrade = DontKnowTrade
  { dontKnowTradeOrderID :: !OrderID,
    dontKnowTradeSecondaryOrderID :: !(Maybe SecondaryOrderID),
    dontKnowTradeExecID :: !ExecID,
    dontKnowTradeDKReason :: !DKReason,
    dontKnowTradeSide :: !Side,
    dontKnowTradeLastQty :: !(Maybe LastQty),
    dontKnowTradeLastPx :: !(Maybe LastPx),
    dontKnowTradeText :: !(Maybe Text),
    dontKnowTradeEncodedTextLen :: !(Maybe EncodedTextLen),
    dontKnowTradeEncodedText :: !(Maybe EncodedText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity DontKnowTrade
