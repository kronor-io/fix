{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Messages.Reject where

import Data.Validity
import FIX.Fields.EncodedText
import FIX.Fields.EncodedTextLen
import FIX.Fields.RefMsgType
import FIX.Fields.RefSeqNum
import FIX.Fields.RefTagID
import FIX.Fields.SessionRejectReason
import FIX.Fields.Text
import GHC.Generics (Generic)

-- MessageSpec {messageName = "Reject", messageType = "3", messageCategory = "admin", messagePieces = [MessagePieceField "RefSeqNum" True,MessagePieceField "RefTagID" False,MessagePieceField "RefMsgType" False,MessagePieceField "SessionRejectReason" False,MessagePieceField "Text" False,MessagePieceField "EncodedTextLen" False,MessagePieceField "EncodedText" False]}
data Reject = Reject
  { rejectRefSeqNum :: !RefSeqNum,
    rejectRefTagID :: !(Maybe RefTagID),
    rejectRefMsgType :: !(Maybe RefMsgType),
    rejectSessionRejectReason :: !(Maybe SessionRejectReason),
    rejectText :: !(Maybe Text),
    rejectEncodedTextLen :: !(Maybe EncodedTextLen),
    rejectEncodedText :: !(Maybe EncodedText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity Reject
