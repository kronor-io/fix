{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Components.ExAnteData where

import Data.List.NonEmpty (NonEmpty)
import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.BidExAnteCost
import FIX.Fields.BidExAnteCostPercentage
import FIX.Fields.MsgType
import FIX.Fields.OfferExAnteCost
import FIX.Fields.OfferExAnteCostPercentage
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | ComponentSpec
--   { componentName = "ExAnteData"
--   , componentPieces =
--       [ MessagePieceField "BidExAnteCost" False
--       , MessagePieceField "OfferExAnteCost" False
--       , MessagePieceField "BidExAnteCostPercentage" False
--       , MessagePieceField "OfferExAnteCostPercentage" False
--       ]
--   }
data ExAnteData = ExAnteData
  { exAnteDataBidExAnteCost :: !(Maybe BidExAnteCost),
    exAnteDataOfferExAnteCost :: !(Maybe OfferExAnteCost),
    exAnteDataBidExAnteCostPercentage :: !(Maybe BidExAnteCostPercentage),
    exAnteDataOfferExAnteCostPercentage :: !(Maybe OfferExAnteCostPercentage)
  }
  deriving stock (Show, Eq, Generic)

instance Validity ExAnteData

instance IsComponent ExAnteData where
  toComponentFields ((ExAnteData {..})) =
    mconcat
      [ optionalFieldB exAnteDataBidExAnteCost,
        optionalFieldB exAnteDataOfferExAnteCost,
        optionalFieldB exAnteDataBidExAnteCostPercentage,
        optionalFieldB exAnteDataOfferExAnteCostPercentage
      ]
  fromComponentFields = do
    exAnteDataBidExAnteCost <- optionalFieldP
    exAnteDataOfferExAnteCost <- optionalFieldP
    exAnteDataBidExAnteCostPercentage <- optionalFieldP
    exAnteDataOfferExAnteCostPercentage <- optionalFieldP
    pure (ExAnteData {..})

makeExAnteData :: ExAnteData
makeExAnteData =
  let exAnteDataBidExAnteCost = Nothing
      exAnteDataOfferExAnteCost = Nothing
      exAnteDataBidExAnteCostPercentage = Nothing
      exAnteDataOfferExAnteCostPercentage = Nothing
   in (ExAnteData {..})
