{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.QuoteRequestRelatedSymLegsLegAllocsGroupElem where

import Data.List.NonEmpty (NonEmpty)
import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.LegAllocAccount
import FIX.Fields.LegAllocQty
import FIX.Fields.MsgType
import FIX.Fields.NoLegAllocs
import FIX.Groups.Class
import FIX.Groups.QuoteRequestRelatedSymLegsLegAllocsNestedPartiesGroupElem
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "QuoteRequestRelatedSymLegsLegAllocs"
--   , groupNumberField = "NoLegAllocs"
--   , groupPieces =
--       [ MessagePieceField "LegAllocAccount" True
--       , MessagePieceField "LegAllocQty" True
--       , MessagePieceGroup
--           GroupSpec
--             { groupName = "QuoteRequestRelatedSymLegsLegAllocsNestedParties"
--             , groupNumberField = "NoNestedPartyIDs"
--             , groupPieces =
--                 [ MessagePieceField "NestedPartyID" True
--                 , MessagePieceField "NestedPartyIDSource" False
--                 , MessagePieceField "NestedPartyRole" False
--                 , MessagePieceField "NestedPartyRoleQualifier" False
--                 , MessagePieceGroup
--                     GroupSpec
--                       { groupName =
--                           "QuoteRequestRelatedSymLegsLegAllocsNestedPartiesNestedPartySubIDs"
--                       , groupNumberField = "NoNestedPartySubIDs"
--                       , groupPieces =
--                           [ MessagePieceField "NestedPartySubID" True
--                           , MessagePieceField "NestedPartySubIDType" False
--                           ]
--                       }
--                     False
--                 ]
--             }
--           False
--       ]
--   }
data QuoteRequestRelatedSymLegsLegAllocsGroupElem = QuoteRequestRelatedSymLegsLegAllocsGroupElem
  { quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocAccount :: !LegAllocAccount,
    quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocQty :: !LegAllocQty,
    quoteRequestRelatedSymLegsLegAllocsGroupElemQuoteRequestRelatedSymLegsLegAllocsNestedPartiesGroup :: ![QuoteRequestRelatedSymLegsLegAllocsNestedPartiesGroupElem]
  }
  deriving stock (Show, Eq, Generic)

instance Validity QuoteRequestRelatedSymLegsLegAllocsGroupElem

instance IsComponent QuoteRequestRelatedSymLegsLegAllocsGroupElem where
  toComponentFields ((QuoteRequestRelatedSymLegsLegAllocsGroupElem {..})) =
    mconcat
      [ requiredFieldB quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocAccount,
        requiredFieldB quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocQty,
        optionalGroupB quoteRequestRelatedSymLegsLegAllocsGroupElemQuoteRequestRelatedSymLegsLegAllocsNestedPartiesGroup
      ]
  fromComponentFields = do
    quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocAccount <- requiredFieldP
    quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocQty <- requiredFieldP
    quoteRequestRelatedSymLegsLegAllocsGroupElemQuoteRequestRelatedSymLegsLegAllocsNestedPartiesGroup <- optionalGroupP
    pure (QuoteRequestRelatedSymLegsLegAllocsGroupElem {..})

instance IsGroupElement QuoteRequestRelatedSymLegsLegAllocsGroupElem where
  type GroupNumField QuoteRequestRelatedSymLegsLegAllocsGroupElem = NoLegAllocs
  mkGroupNum Proxy = NoLegAllocs
  countGroupNum Proxy = unNoLegAllocs

makeQuoteRequestRelatedSymLegsLegAllocsGroupElem :: LegAllocAccount -> (LegAllocQty -> QuoteRequestRelatedSymLegsLegAllocsGroupElem)
makeQuoteRequestRelatedSymLegsLegAllocsGroupElem quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocAccount quoteRequestRelatedSymLegsLegAllocsGroupElemLegAllocQty =
  let quoteRequestRelatedSymLegsLegAllocsGroupElemQuoteRequestRelatedSymLegsLegAllocsNestedPartiesGroup = []
   in (QuoteRequestRelatedSymLegsLegAllocsGroupElem {..})
