{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.RelatedSymGroupElem where

import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.Account
import FIX.Fields.Currency
import FIX.Fields.DayCount
import FIX.Fields.ExpireTime
import FIX.Fields.Issuer
import FIX.Fields.LegRefID
import FIX.Fields.LegSettlDate
import FIX.Fields.MaturityDate
import FIX.Fields.MaturityDate2
import FIX.Fields.MsgType
import FIX.Fields.NoRelatedSym
import FIX.Fields.OrderQty
import FIX.Fields.OrderQty2
import FIX.Fields.QuoteType
import FIX.Fields.SettlDate
import FIX.Fields.SettlDate2
import FIX.Fields.Side
import FIX.Fields.Symbol
import FIX.Groups.AllocsGroupElem
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "NoRelatedSym"
--   , groupNumberField = "NoRelatedSym"
--   , groupPieces =
--       [ MessagePieceField "DayCount" True
--       , MessagePieceField "Symbol" True
--       , MessagePieceField "MaturityDate" False
--       , MessagePieceField "MaturityDate2" False
--       , MessagePieceField "Issuer" False
--       , MessagePieceField "QuoteType" True
--       , MessagePieceField "Side" False
--       , MessagePieceField "OrderQty" True
--       , MessagePieceField "SettlDate" True
--       , MessagePieceField "SettlDate2" False
--       , MessagePieceField "OrderQty2" False
--       , MessagePieceField "Currency" False
--       , MessagePieceField "Account" True
--       , MessagePieceField "ExpireTime" False
--       , MessagePieceGroup
--           GroupSpec
--             { groupName = "NoAllocs"
--             , groupNumberField = "NoAllocs"
--             , groupPieces =
--                 [ MessagePieceField "AllocAccount" True
--                 , MessagePieceField "AllocQty" True
--                 , MessagePieceGroup
--                     GroupSpec
--                       { groupName = "NoNestedPartyIDs"
--                       , groupNumberField = "NoNestedPartyIDs"
--                       , groupPieces =
--                           [ MessagePieceField "NestedPartyID" True
--                           , MessagePieceField "NestedPartyIDSource" False
--                           , MessagePieceField "NestedPartyRole" False
--                           , MessagePieceField "NestedPartyRoleQualifier" False
--                           ]
--                       }
--                     False
--                 ]
--             }
--           False
--       , MessagePieceField "LegRefID" True
--       , MessagePieceField "LegSettlDate" True
--       ]
--   }
data RelatedSymGroupElem = RelatedSymGroupElem
  { relatedSymGroupElemDayCount :: !DayCount,
    relatedSymGroupElemSymbol :: !Symbol,
    relatedSymGroupElemMaturityDate :: !(Maybe MaturityDate),
    relatedSymGroupElemMaturityDate2 :: !(Maybe MaturityDate2),
    relatedSymGroupElemIssuer :: !(Maybe Issuer),
    relatedSymGroupElemQuoteType :: !QuoteType,
    relatedSymGroupElemSide :: !(Maybe Side),
    relatedSymGroupElemOrderQty :: !OrderQty,
    relatedSymGroupElemSettlDate :: !SettlDate,
    relatedSymGroupElemSettlDate2 :: !(Maybe SettlDate2),
    relatedSymGroupElemOrderQty2 :: !(Maybe OrderQty2),
    relatedSymGroupElemCurrency :: !(Maybe Currency),
    relatedSymGroupElemAccount :: !Account,
    relatedSymGroupElemExpireTime :: !(Maybe ExpireTime),
    relatedSymGroupElemAllocsGroup :: ![AllocsGroupElem],
    relatedSymGroupElemLegRefID :: !LegRefID,
    relatedSymGroupElemLegSettlDate :: !LegSettlDate
  }
  deriving stock (Show, Eq, Generic)

instance Validity RelatedSymGroupElem

instance IsComponent RelatedSymGroupElem where
  toComponentFields ((RelatedSymGroupElem {..})) =
    mconcat
      [ requiredFieldB relatedSymGroupElemDayCount,
        requiredFieldB relatedSymGroupElemSymbol,
        optionalFieldB relatedSymGroupElemMaturityDate,
        optionalFieldB relatedSymGroupElemMaturityDate2,
        optionalFieldB relatedSymGroupElemIssuer,
        requiredFieldB relatedSymGroupElemQuoteType,
        optionalFieldB relatedSymGroupElemSide,
        requiredFieldB relatedSymGroupElemOrderQty,
        requiredFieldB relatedSymGroupElemSettlDate,
        optionalFieldB relatedSymGroupElemSettlDate2,
        optionalFieldB relatedSymGroupElemOrderQty2,
        optionalFieldB relatedSymGroupElemCurrency,
        requiredFieldB relatedSymGroupElemAccount,
        optionalFieldB relatedSymGroupElemExpireTime,
        optionalGroupB relatedSymGroupElemAllocsGroup,
        requiredFieldB relatedSymGroupElemLegRefID,
        requiredFieldB relatedSymGroupElemLegSettlDate
      ]
  fromComponentFields = do
    relatedSymGroupElemDayCount <- requiredFieldP
    relatedSymGroupElemSymbol <- requiredFieldP
    relatedSymGroupElemMaturityDate <- optionalFieldP
    relatedSymGroupElemMaturityDate2 <- optionalFieldP
    relatedSymGroupElemIssuer <- optionalFieldP
    relatedSymGroupElemQuoteType <- requiredFieldP
    relatedSymGroupElemSide <- optionalFieldP
    relatedSymGroupElemOrderQty <- requiredFieldP
    relatedSymGroupElemSettlDate <- requiredFieldP
    relatedSymGroupElemSettlDate2 <- optionalFieldP
    relatedSymGroupElemOrderQty2 <- optionalFieldP
    relatedSymGroupElemCurrency <- optionalFieldP
    relatedSymGroupElemAccount <- requiredFieldP
    relatedSymGroupElemExpireTime <- optionalFieldP
    relatedSymGroupElemAllocsGroup <- optionalGroupP
    relatedSymGroupElemLegRefID <- requiredFieldP
    relatedSymGroupElemLegSettlDate <- requiredFieldP
    pure (RelatedSymGroupElem {..})

instance IsGroupElement RelatedSymGroupElem where
  type GroupNumField RelatedSymGroupElem = NoRelatedSym
  mkGroupNum Proxy = NoRelatedSym
  countGroupNum Proxy = unNoRelatedSym

makeRelatedSymGroupElem :: DayCount -> (Symbol -> (QuoteType -> (OrderQty -> (SettlDate -> (Account -> (LegRefID -> (LegSettlDate -> RelatedSymGroupElem)))))))
makeRelatedSymGroupElem relatedSymGroupElemDayCount relatedSymGroupElemSymbol relatedSymGroupElemQuoteType relatedSymGroupElemOrderQty relatedSymGroupElemSettlDate relatedSymGroupElemAccount relatedSymGroupElemLegRefID relatedSymGroupElemLegSettlDate =
  let relatedSymGroupElemMaturityDate = Nothing
      relatedSymGroupElemMaturityDate2 = Nothing
      relatedSymGroupElemIssuer = Nothing
      relatedSymGroupElemSide = Nothing
      relatedSymGroupElemSettlDate2 = Nothing
      relatedSymGroupElemOrderQty2 = Nothing
      relatedSymGroupElemCurrency = Nothing
      relatedSymGroupElemExpireTime = Nothing
      relatedSymGroupElemAllocsGroup = []
   in (RelatedSymGroupElem {..})
