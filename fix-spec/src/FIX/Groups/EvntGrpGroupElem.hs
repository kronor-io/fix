{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.EvntGrpGroupElem where

import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.EventDate
import FIX.Fields.EventPx
import FIX.Fields.EventText
import FIX.Fields.EventType
import FIX.Fields.MsgType
import FIX.Fields.NoEvents
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "EvntGrp"
--   , groupNumberField = "NoEvents"
--   , groupPieces =
--       [ MessagePieceField "EventType" True
--       , MessagePieceField "EventDate" False
--       , MessagePieceField "EventPx" False
--       , MessagePieceField "EventText" False
--       ]
--   }
data EvntGrpGroupElem = EvntGrpGroupElem
  { evntGrpGroupElemEventType :: !EventType,
    evntGrpGroupElemEventDate :: !(Maybe EventDate),
    evntGrpGroupElemEventPx :: !(Maybe EventPx),
    evntGrpGroupElemEventText :: !(Maybe EventText)
  }
  deriving stock (Show, Eq, Generic)

instance Validity EvntGrpGroupElem

instance IsComponent EvntGrpGroupElem where
  toComponentFields ((EvntGrpGroupElem {..})) =
    mconcat
      [ requiredFieldB evntGrpGroupElemEventType,
        optionalFieldB evntGrpGroupElemEventDate,
        optionalFieldB evntGrpGroupElemEventPx,
        optionalFieldB evntGrpGroupElemEventText
      ]
  fromComponentFields = do
    evntGrpGroupElemEventType <- requiredFieldP
    evntGrpGroupElemEventDate <- optionalFieldP
    evntGrpGroupElemEventPx <- optionalFieldP
    evntGrpGroupElemEventText <- optionalFieldP
    pure (EvntGrpGroupElem {..})

instance IsGroupElement EvntGrpGroupElem where
  type GroupNumField EvntGrpGroupElem = NoEvents
  mkGroupNum Proxy = NoEvents
  countGroupNum Proxy = unNoEvents

makeEvntGrpGroupElem :: EventType -> EvntGrpGroupElem
makeEvntGrpGroupElem evntGrpGroupElemEventType =
  let evntGrpGroupElemEventDate = Nothing
      evntGrpGroupElemEventPx = Nothing
      evntGrpGroupElemEventText = Nothing
   in (EvntGrpGroupElem {..})
