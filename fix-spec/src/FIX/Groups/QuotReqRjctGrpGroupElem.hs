{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.QuotReqRjctGrpGroupElem where

import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.Currency
import FIX.Fields.MsgType
import FIX.Fields.NoRelatedSym
import FIX.Fields.QuoteType
import FIX.Fields.Symbol
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "QuotReqRjctGrp"
--   , groupNumberField = "NoRelatedSym"
--   , groupPieces =
--       [ MessagePieceField "Symbol" True
--       , MessagePieceField "QuoteType" True
--       , MessagePieceField "Currency" False
--       ]
--   }
data QuotReqRjctGrpGroupElem = QuotReqRjctGrpGroupElem
  { quotReqRjctGrpGroupElemSymbol :: !Symbol,
    quotReqRjctGrpGroupElemQuoteType :: !QuoteType,
    quotReqRjctGrpGroupElemCurrency :: !(Maybe Currency)
  }
  deriving stock (Show, Eq, Generic)

instance Validity QuotReqRjctGrpGroupElem

instance IsComponent QuotReqRjctGrpGroupElem where
  toComponentFields ((QuotReqRjctGrpGroupElem {..})) =
    mconcat
      [ requiredFieldB quotReqRjctGrpGroupElemSymbol,
        requiredFieldB quotReqRjctGrpGroupElemQuoteType,
        optionalFieldB quotReqRjctGrpGroupElemCurrency
      ]
  fromComponentFields = do
    quotReqRjctGrpGroupElemSymbol <- requiredFieldP
    quotReqRjctGrpGroupElemQuoteType <- requiredFieldP
    quotReqRjctGrpGroupElemCurrency <- optionalFieldP
    pure (QuotReqRjctGrpGroupElem {..})

instance IsGroupElement QuotReqRjctGrpGroupElem where
  type GroupNumField QuotReqRjctGrpGroupElem = NoRelatedSym
  mkGroupNum Proxy = NoRelatedSym
  countGroupNum Proxy = unNoRelatedSym

makeQuotReqRjctGrpGroupElem :: Symbol -> (QuoteType -> QuotReqRjctGrpGroupElem)
makeQuotReqRjctGrpGroupElem quotReqRjctGrpGroupElemSymbol quotReqRjctGrpGroupElemQuoteType =
  let quotReqRjctGrpGroupElemCurrency = Nothing
   in (QuotReqRjctGrpGroupElem {..})
