{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.UndSecAltIDGrpGroupElem where

import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.MsgType
import FIX.Fields.NoUnderlyingSecurityAltID
import FIX.Fields.UnderlyingSecurityAltID
import FIX.Fields.UnderlyingSecurityAltIDSource
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "UndSecAltIDGrp"
--   , groupNumberField = "NoUnderlyingSecurityAltID"
--   , groupPieces =
--       [ MessagePieceField "UnderlyingSecurityAltID" True
--       , MessagePieceField "UnderlyingSecurityAltIDSource" False
--       ]
--   }
data UndSecAltIDGrpGroupElem = UndSecAltIDGrpGroupElem
  { undSecAltIDGrpGroupElemUnderlyingSecurityAltID :: !UnderlyingSecurityAltID,
    undSecAltIDGrpGroupElemUnderlyingSecurityAltIDSource :: !(Maybe UnderlyingSecurityAltIDSource)
  }
  deriving stock (Show, Eq, Generic)

instance Validity UndSecAltIDGrpGroupElem

instance IsComponent UndSecAltIDGrpGroupElem where
  toComponentFields ((UndSecAltIDGrpGroupElem {..})) =
    mconcat
      [ requiredFieldB undSecAltIDGrpGroupElemUnderlyingSecurityAltID,
        optionalFieldB undSecAltIDGrpGroupElemUnderlyingSecurityAltIDSource
      ]
  fromComponentFields = do
    undSecAltIDGrpGroupElemUnderlyingSecurityAltID <- requiredFieldP
    undSecAltIDGrpGroupElemUnderlyingSecurityAltIDSource <- optionalFieldP
    pure (UndSecAltIDGrpGroupElem {..})

instance IsGroupElement UndSecAltIDGrpGroupElem where
  type GroupNumField UndSecAltIDGrpGroupElem = NoUnderlyingSecurityAltID
  mkGroupNum Proxy = NoUnderlyingSecurityAltID
  countGroupNum Proxy = unNoUnderlyingSecurityAltID

makeUndSecAltIDGrpGroupElem :: UnderlyingSecurityAltID -> UndSecAltIDGrpGroupElem
makeUndSecAltIDGrpGroupElem undSecAltIDGrpGroupElemUnderlyingSecurityAltID =
  let undSecAltIDGrpGroupElemUnderlyingSecurityAltIDSource = Nothing
   in (UndSecAltIDGrpGroupElem {..})
