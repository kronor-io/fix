{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.ExecutionReportAllocsNestedPartiesGroupElem where

import Data.List.NonEmpty (NonEmpty)
import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.MsgType
import FIX.Fields.NestedPartyID
import FIX.Fields.NestedPartyIDSource
import FIX.Fields.NestedPartyRole
import FIX.Fields.NestedPartyRoleQualifier
import FIX.Fields.NoNestedPartyIDs
import FIX.Groups.Class
import FIX.Groups.ExecutionReportAllocsNestedPartiesNestedPartySubIDsGroupElem
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "ExecutionReportAllocsNestedParties"
--   , groupNumberField = "NoNestedPartyIDs"
--   , groupPieces =
--       [ MessagePieceField "NestedPartyID" True
--       , MessagePieceField "NestedPartyIDSource" False
--       , MessagePieceField "NestedPartyRole" False
--       , MessagePieceField "NestedPartyRoleQualifier" False
--       , MessagePieceGroup
--           GroupSpec
--             { groupName = "ExecutionReportAllocsNestedPartiesNestedPartySubIDs"
--             , groupNumberField = "NoNestedPartySubIDs"
--             , groupPieces =
--                 [ MessagePieceField "NestedPartySubID" True
--                 , MessagePieceField "NestedPartySubIDType" False
--                 ]
--             }
--           False
--       ]
--   }
data ExecutionReportAllocsNestedPartiesGroupElem = ExecutionReportAllocsNestedPartiesGroupElem
  { executionReportAllocsNestedPartiesGroupElemNestedPartyID :: !NestedPartyID,
    executionReportAllocsNestedPartiesGroupElemNestedPartyIDSource :: !(Maybe NestedPartyIDSource),
    executionReportAllocsNestedPartiesGroupElemNestedPartyRole :: !(Maybe NestedPartyRole),
    executionReportAllocsNestedPartiesGroupElemNestedPartyRoleQualifier :: !(Maybe NestedPartyRoleQualifier),
    executionReportAllocsNestedPartiesGroupElemExecutionReportAllocsNestedPartiesNestedPartySubIDsGroup :: ![ExecutionReportAllocsNestedPartiesNestedPartySubIDsGroupElem]
  }
  deriving stock (Show, Eq, Generic)

instance Validity ExecutionReportAllocsNestedPartiesGroupElem

instance IsComponent ExecutionReportAllocsNestedPartiesGroupElem where
  toComponentFields ((ExecutionReportAllocsNestedPartiesGroupElem {..})) =
    mconcat
      [ requiredFieldB executionReportAllocsNestedPartiesGroupElemNestedPartyID,
        optionalFieldB executionReportAllocsNestedPartiesGroupElemNestedPartyIDSource,
        optionalFieldB executionReportAllocsNestedPartiesGroupElemNestedPartyRole,
        optionalFieldB executionReportAllocsNestedPartiesGroupElemNestedPartyRoleQualifier,
        optionalGroupB executionReportAllocsNestedPartiesGroupElemExecutionReportAllocsNestedPartiesNestedPartySubIDsGroup
      ]
  fromComponentFields = do
    executionReportAllocsNestedPartiesGroupElemNestedPartyID <- requiredFieldP
    executionReportAllocsNestedPartiesGroupElemNestedPartyIDSource <- optionalFieldP
    executionReportAllocsNestedPartiesGroupElemNestedPartyRole <- optionalFieldP
    executionReportAllocsNestedPartiesGroupElemNestedPartyRoleQualifier <- optionalFieldP
    executionReportAllocsNestedPartiesGroupElemExecutionReportAllocsNestedPartiesNestedPartySubIDsGroup <- optionalGroupP
    pure (ExecutionReportAllocsNestedPartiesGroupElem {..})

instance IsGroupElement ExecutionReportAllocsNestedPartiesGroupElem where
  type GroupNumField ExecutionReportAllocsNestedPartiesGroupElem = NoNestedPartyIDs
  mkGroupNum Proxy = NoNestedPartyIDs
  countGroupNum Proxy = unNoNestedPartyIDs

makeExecutionReportAllocsNestedPartiesGroupElem :: NestedPartyID -> ExecutionReportAllocsNestedPartiesGroupElem
makeExecutionReportAllocsNestedPartiesGroupElem executionReportAllocsNestedPartiesGroupElemNestedPartyID =
  let executionReportAllocsNestedPartiesGroupElemNestedPartyIDSource = Nothing
      executionReportAllocsNestedPartiesGroupElemNestedPartyRole = Nothing
      executionReportAllocsNestedPartiesGroupElemNestedPartyRoleQualifier = Nothing
      executionReportAllocsNestedPartiesGroupElemExecutionReportAllocsNestedPartiesNestedPartySubIDsGroup = []
   in (ExecutionReportAllocsNestedPartiesGroupElem {..})
