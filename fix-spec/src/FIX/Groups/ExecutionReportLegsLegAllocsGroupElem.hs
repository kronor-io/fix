{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.ExecutionReportLegsLegAllocsGroupElem where

import Data.List.NonEmpty (NonEmpty)
import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Fields.LegAllocAccount
import FIX.Fields.LegAllocQty
import FIX.Fields.MsgType
import FIX.Fields.NoLegAllocs
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "ExecutionReportLegsLegAllocs"
--   , groupNumberField = "NoLegAllocs"
--   , groupPieces =
--       [ MessagePieceField "LegAllocAccount" True
--       , MessagePieceField "LegAllocQty" False
--       ]
--   }
data ExecutionReportLegsLegAllocsGroupElem = ExecutionReportLegsLegAllocsGroupElem
  { executionReportLegsLegAllocsGroupElemLegAllocAccount :: !LegAllocAccount,
    executionReportLegsLegAllocsGroupElemLegAllocQty :: !(Maybe LegAllocQty)
  }
  deriving stock (Show, Eq, Generic)

instance Validity ExecutionReportLegsLegAllocsGroupElem

instance IsComponent ExecutionReportLegsLegAllocsGroupElem where
  toComponentFields ((ExecutionReportLegsLegAllocsGroupElem {..})) =
    mconcat
      [ requiredFieldB executionReportLegsLegAllocsGroupElemLegAllocAccount,
        optionalFieldB executionReportLegsLegAllocsGroupElemLegAllocQty
      ]
  fromComponentFields = do
    executionReportLegsLegAllocsGroupElemLegAllocAccount <- requiredFieldP
    executionReportLegsLegAllocsGroupElemLegAllocQty <- optionalFieldP
    pure (ExecutionReportLegsLegAllocsGroupElem {..})

instance IsGroupElement ExecutionReportLegsLegAllocsGroupElem where
  type GroupNumField ExecutionReportLegsLegAllocsGroupElem = NoLegAllocs
  mkGroupNum Proxy = NoLegAllocs
  countGroupNum Proxy = unNoLegAllocs

makeExecutionReportLegsLegAllocsGroupElem :: LegAllocAccount -> ExecutionReportLegsLegAllocsGroupElem
makeExecutionReportLegsLegAllocsGroupElem executionReportLegsLegAllocsGroupElemLegAllocAccount =
  let executionReportLegsLegAllocsGroupElemLegAllocQty = Nothing
   in (ExecutionReportLegsLegAllocsGroupElem {..})
