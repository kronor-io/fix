{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Groups.QuoteCancelQuoteEntriesUnderlyingsGroupElem where

import Data.List.NonEmpty (NonEmpty)
import Data.Proxy
import Data.Validity
import FIX.Components.Class
import FIX.Components.UnderlyingInstrument
import FIX.Fields.MsgType
import FIX.Fields.NoUnderlyings
import FIX.Groups.Class
import GHC.Generics (Generic)

-- | GroupSpec
--   { groupName = "QuoteCancelQuoteEntriesUnderlyings"
--   , groupNumberField = "NoUnderlyings"
--   , groupPieces =
--       [ MessagePieceComponent "UnderlyingInstrument" True ]
--   }
data QuoteCancelQuoteEntriesUnderlyingsGroupElem = QuoteCancelQuoteEntriesUnderlyingsGroupElem {quoteCancelQuoteEntriesUnderlyingsGroupElemUnderlyingInstrument :: !UnderlyingInstrument}
  deriving stock (Show, Eq, Generic)

instance Validity QuoteCancelQuoteEntriesUnderlyingsGroupElem

instance IsComponent QuoteCancelQuoteEntriesUnderlyingsGroupElem where
  toComponentFields ((QuoteCancelQuoteEntriesUnderlyingsGroupElem {..})) = mconcat [requiredComponentB quoteCancelQuoteEntriesUnderlyingsGroupElemUnderlyingInstrument]
  fromComponentFields = do
    quoteCancelQuoteEntriesUnderlyingsGroupElemUnderlyingInstrument <- requiredComponentP
    pure (QuoteCancelQuoteEntriesUnderlyingsGroupElem {..})

instance IsGroupElement QuoteCancelQuoteEntriesUnderlyingsGroupElem where
  type GroupNumField QuoteCancelQuoteEntriesUnderlyingsGroupElem = NoUnderlyings
  mkGroupNum Proxy = NoUnderlyings
  countGroupNum Proxy = unNoUnderlyings

makeQuoteCancelQuoteEntriesUnderlyingsGroupElem :: UnderlyingInstrument -> QuoteCancelQuoteEntriesUnderlyingsGroupElem
makeQuoteCancelQuoteEntriesUnderlyingsGroupElem quoteCancelQuoteEntriesUnderlyingsGroupElemUnderlyingInstrument =
  let
   in (QuoteCancelQuoteEntriesUnderlyingsGroupElem {..})
