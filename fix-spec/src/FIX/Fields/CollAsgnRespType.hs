{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.CollAsgnRespType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 905, fieldName = "CollAsgnRespType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "RECEIVED"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ACCEPTED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "DECLINED"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "REJECTED"}]}
data CollAsgnRespType
  = CollAsgnRespType_RECEIVED
  | CollAsgnRespType_ACCEPTED
  | CollAsgnRespType_DECLINED
  | CollAsgnRespType_REJECTED
  deriving stock (Show, Eq, Generic)

instance Validity CollAsgnRespType

instance IsField CollAsgnRespType where
  fieldTag Proxy = 905
  fieldIsData Proxy = False
  fieldToValue = \case
    CollAsgnRespType_RECEIVED -> "0"
    CollAsgnRespType_ACCEPTED -> "1"
    CollAsgnRespType_DECLINED -> "2"
    CollAsgnRespType_REJECTED -> "3"
  fieldFromValue = \case
    "0" -> Right CollAsgnRespType_RECEIVED
    "1" -> Right CollAsgnRespType_ACCEPTED
    "2" -> Right CollAsgnRespType_DECLINED
    "3" -> Right CollAsgnRespType_REJECTED
    v -> Left ("Unknown CollAsgnRespType: " <> show v)
