{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ListStatusType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 429, fieldName = "ListStatusType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ACK"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "RESPONSE"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "TIMED"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "EXEC_STARTED"},FieldValueSpec {fieldValueEnum = "5", fieldValueDescription = "ALL_DONE"},FieldValueSpec {fieldValueEnum = "6", fieldValueDescription = "ALERT"}]}
data ListStatusType
  = ListStatusType_ACK
  | ListStatusType_RESPONSE
  | ListStatusType_TIMED
  | ListStatusType_EXEC_STARTED
  | ListStatusType_ALL_DONE
  | ListStatusType_ALERT
  deriving stock (Show, Eq, Generic)

instance Validity ListStatusType

instance IsField ListStatusType where
  fieldTag Proxy = 429
  fieldIsData Proxy = False
  fieldToValue = \case
    ListStatusType_ACK -> "1"
    ListStatusType_RESPONSE -> "2"
    ListStatusType_TIMED -> "3"
    ListStatusType_EXEC_STARTED -> "4"
    ListStatusType_ALL_DONE -> "5"
    ListStatusType_ALERT -> "6"
  fieldFromValue = \case
    "1" -> Right ListStatusType_ACK
    "2" -> Right ListStatusType_RESPONSE
    "3" -> Right ListStatusType_TIMED
    "4" -> Right ListStatusType_EXEC_STARTED
    "5" -> Right ListStatusType_ALL_DONE
    "6" -> Right ListStatusType_ALERT
    v -> Left ("Unknown ListStatusType: " <> show v)
