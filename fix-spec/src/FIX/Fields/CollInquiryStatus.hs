{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.CollInquiryStatus where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 945, fieldName = "CollInquiryStatus", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "ACCEPTED"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ACCEPTED_WITH_WARNINGS"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "COMPLETED"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "COMPLETED_WITH_WARNINGS"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "REJECTED"}]}
data CollInquiryStatus
  = CollInquiryStatus_ACCEPTED
  | CollInquiryStatus_ACCEPTED_WITH_WARNINGS
  | CollInquiryStatus_COMPLETED
  | CollInquiryStatus_COMPLETED_WITH_WARNINGS
  | CollInquiryStatus_REJECTED
  deriving stock (Show, Eq, Generic)

instance Validity CollInquiryStatus

instance IsField CollInquiryStatus where
  fieldTag Proxy = 945
  fieldIsData Proxy = False
  fieldToValue = \case
    CollInquiryStatus_ACCEPTED -> "0"
    CollInquiryStatus_ACCEPTED_WITH_WARNINGS -> "1"
    CollInquiryStatus_COMPLETED -> "2"
    CollInquiryStatus_COMPLETED_WITH_WARNINGS -> "3"
    CollInquiryStatus_REJECTED -> "4"
  fieldFromValue = \case
    "0" -> Right CollInquiryStatus_ACCEPTED
    "1" -> Right CollInquiryStatus_ACCEPTED_WITH_WARNINGS
    "2" -> Right CollInquiryStatus_COMPLETED
    "3" -> Right CollInquiryStatus_COMPLETED_WITH_WARNINGS
    "4" -> Right CollInquiryStatus_REJECTED
    v -> Left ("Unknown CollInquiryStatus: " <> show v)
