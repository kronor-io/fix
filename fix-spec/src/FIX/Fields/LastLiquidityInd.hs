{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.LastLiquidityInd where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 851, fieldName = "LastLiquidityInd", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ADDED_LIQUIDITY"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "REMOVED_LIQUIDITY"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "LIQUIDITY_ROUTED_OUT"}]}
data LastLiquidityInd
  = LastLiquidityInd_ADDED_LIQUIDITY
  | LastLiquidityInd_REMOVED_LIQUIDITY
  | LastLiquidityInd_LIQUIDITY_ROUTED_OUT
  deriving stock (Show, Eq, Generic)

instance Validity LastLiquidityInd

instance IsField LastLiquidityInd where
  fieldTag Proxy = 851
  fieldIsData Proxy = False
  fieldToValue = \case
    LastLiquidityInd_ADDED_LIQUIDITY -> "1"
    LastLiquidityInd_REMOVED_LIQUIDITY -> "2"
    LastLiquidityInd_LIQUIDITY_ROUTED_OUT -> "3"
  fieldFromValue = \case
    "1" -> Right LastLiquidityInd_ADDED_LIQUIDITY
    "2" -> Right LastLiquidityInd_REMOVED_LIQUIDITY
    "3" -> Right LastLiquidityInd_LIQUIDITY_ROUTED_OUT
    v -> Left ("Unknown LastLiquidityInd: " <> show v)
