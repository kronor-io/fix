{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.QuoteCancelType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 298
--   , fieldName = "QuoteCancelType"
--   , fieldType = FieldTypeInt
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "1"
--           , fieldValueDescription = "CANCEL_FOR_ONE_OR_MORE_SECURITIES"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "2"
--           , fieldValueDescription = "CANCEL_FOR_SECURITY_TYPE"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "3"
--           , fieldValueDescription = "CANCEL_FOR_UNDERLYING_SECURITY"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "4"
--           , fieldValueDescription = "CANCEL_ALL_QUOTES"
--           }
--       ]
--   }
data QuoteCancelType
  = QuoteCancelTypeCancelForOneOrMoreSecurities
  | QuoteCancelTypeCancelForSecurityType
  | QuoteCancelTypeCancelForUnderlyingSecurity
  | QuoteCancelTypeCancelAllQuotes
  deriving stock (Show, Eq, Generic)

instance Validity QuoteCancelType

instance IsField QuoteCancelType where
  fieldTag Proxy = 298
  fieldIsData Proxy = False
  fieldToValue = \case
    QuoteCancelTypeCancelForOneOrMoreSecurities -> "1"
    QuoteCancelTypeCancelForSecurityType -> "2"
    QuoteCancelTypeCancelForUnderlyingSecurity -> "3"
    QuoteCancelTypeCancelAllQuotes -> "4"
  fieldFromValue = \case
    "1" -> Right QuoteCancelTypeCancelForOneOrMoreSecurities
    "2" -> Right QuoteCancelTypeCancelForSecurityType
    "3" -> Right QuoteCancelTypeCancelForUnderlyingSecurity
    "4" -> Right QuoteCancelTypeCancelAllQuotes
    v -> Left ("Unknown QuoteCancelType: " <> show v)
