{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.OrdType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 40
--   , fieldName = "OrdType"
--   , fieldType = FieldTypeChar
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "1" , fieldValueDescription = "MARKET" }
--       , FieldValueSpec
--           { fieldValueEnum = "2" , fieldValueDescription = "LIMIT" }
--       , FieldValueSpec
--           { fieldValueEnum = "3" , fieldValueDescription = "STOP" }
--       , FieldValueSpec
--           { fieldValueEnum = "4" , fieldValueDescription = "STOP_LIMIT" }
--       , FieldValueSpec
--           { fieldValueEnum = "5"
--           , fieldValueDescription = "MARKET_ON_CLOSE"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "6"
--           , fieldValueDescription = "WITH_OR_WITHOUT"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "7"
--           , fieldValueDescription = "LIMIT_OR_BETTER"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "8"
--           , fieldValueDescription = "LIMIT_WITH_OR_WITHOUT"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "9" , fieldValueDescription = "ON_BASIS" }
--       , FieldValueSpec
--           { fieldValueEnum = "A" , fieldValueDescription = "ON_CLOSE" }
--       , FieldValueSpec
--           { fieldValueEnum = "B" , fieldValueDescription = "LIMIT_ON_CLOSE" }
--       , FieldValueSpec
--           { fieldValueEnum = "C" , fieldValueDescription = "FOREX_MARKET" }
--       , FieldValueSpec
--           { fieldValueEnum = "D"
--           , fieldValueDescription = "PREVIOUSLY_QUOTED"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "E"
--           , fieldValueDescription = "PREVIOUSLY_INDICATED"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "F" , fieldValueDescription = "FOREX_LIMIT" }
--       , FieldValueSpec
--           { fieldValueEnum = "G" , fieldValueDescription = "FOREX_SWAP" }
--       , FieldValueSpec
--           { fieldValueEnum = "H"
--           , fieldValueDescription = "FOREX_PREVIOUSLY_QUOTED"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "I" , fieldValueDescription = "FUNARI" }
--       , FieldValueSpec
--           { fieldValueEnum = "J"
--           , fieldValueDescription = "MARKET_IF_TOUCHED"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "K"
--           , fieldValueDescription = "MARKET_WITH_LEFTOVER_AS_LIMIT"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "L"
--           , fieldValueDescription = "PREVIOUS_FUND_VALUATION_POINT"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "M"
--           , fieldValueDescription = "NEXT_FUND_VALUATION_POINT"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "P" , fieldValueDescription = "PEGGED" }
--       ]
--   }
data OrdType
  = OrdTypeMarket
  | OrdTypeLimit
  | OrdTypeStop
  | OrdTypeStopLimit
  | OrdTypeMarketOnClose
  | OrdTypeWithOrWithout
  | OrdTypeLimitOrBetter
  | OrdTypeLimitWithOrWithout
  | OrdTypeOnBasis
  | OrdTypeOnClose
  | OrdTypeLimitOnClose
  | OrdTypeForexMarket
  | OrdTypePreviouslyQuoted
  | OrdTypePreviouslyIndicated
  | OrdTypeForexLimit
  | OrdTypeForexSwap
  | OrdTypeForexPreviouslyQuoted
  | OrdTypeFunari
  | OrdTypeMarketIfTouched
  | OrdTypeMarketWithLeftoverAsLimit
  | OrdTypePreviousFundValuationPoint
  | OrdTypeNextFundValuationPoint
  | OrdTypePegged
  deriving stock (Show, Eq, Generic)

instance Validity OrdType

instance IsField OrdType where
  fieldTag Proxy = 40
  fieldIsData Proxy = False
  fieldToValue = \case
    OrdTypeMarket -> "1"
    OrdTypeLimit -> "2"
    OrdTypeStop -> "3"
    OrdTypeStopLimit -> "4"
    OrdTypeMarketOnClose -> "5"
    OrdTypeWithOrWithout -> "6"
    OrdTypeLimitOrBetter -> "7"
    OrdTypeLimitWithOrWithout -> "8"
    OrdTypeOnBasis -> "9"
    OrdTypeOnClose -> "A"
    OrdTypeLimitOnClose -> "B"
    OrdTypeForexMarket -> "C"
    OrdTypePreviouslyQuoted -> "D"
    OrdTypePreviouslyIndicated -> "E"
    OrdTypeForexLimit -> "F"
    OrdTypeForexSwap -> "G"
    OrdTypeForexPreviouslyQuoted -> "H"
    OrdTypeFunari -> "I"
    OrdTypeMarketIfTouched -> "J"
    OrdTypeMarketWithLeftoverAsLimit -> "K"
    OrdTypePreviousFundValuationPoint -> "L"
    OrdTypeNextFundValuationPoint -> "M"
    OrdTypePegged -> "P"
  fieldFromValue = \case
    "1" -> Right OrdTypeMarket
    "2" -> Right OrdTypeLimit
    "3" -> Right OrdTypeStop
    "4" -> Right OrdTypeStopLimit
    "5" -> Right OrdTypeMarketOnClose
    "6" -> Right OrdTypeWithOrWithout
    "7" -> Right OrdTypeLimitOrBetter
    "8" -> Right OrdTypeLimitWithOrWithout
    "9" -> Right OrdTypeOnBasis
    "A" -> Right OrdTypeOnClose
    "B" -> Right OrdTypeLimitOnClose
    "C" -> Right OrdTypeForexMarket
    "D" -> Right OrdTypePreviouslyQuoted
    "E" -> Right OrdTypePreviouslyIndicated
    "F" -> Right OrdTypeForexLimit
    "G" -> Right OrdTypeForexSwap
    "H" -> Right OrdTypeForexPreviouslyQuoted
    "I" -> Right OrdTypeFunari
    "J" -> Right OrdTypeMarketIfTouched
    "K" -> Right OrdTypeMarketWithLeftoverAsLimit
    "L" -> Right OrdTypePreviousFundValuationPoint
    "M" -> Right OrdTypeNextFundValuationPoint
    "P" -> Right OrdTypePegged
    v -> Left ("Unknown OrdType: " <> show v)
