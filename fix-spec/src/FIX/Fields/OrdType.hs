{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.OrdType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 40, fieldName = "OrdType", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "MARKET"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "LIMIT"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "STOP"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "STOP_LIMIT"},FieldValueSpec {fieldValueEnum = "6", fieldValueDescription = "WITH_OR_WITHOUT"},FieldValueSpec {fieldValueEnum = "7", fieldValueDescription = "LIMIT_OR_BETTER"},FieldValueSpec {fieldValueEnum = "8", fieldValueDescription = "LIMIT_WITH_OR_WITHOUT"},FieldValueSpec {fieldValueEnum = "9", fieldValueDescription = "ON_BASIS"},FieldValueSpec {fieldValueEnum = "D", fieldValueDescription = "PREVIOUSLY_QUOTED"},FieldValueSpec {fieldValueEnum = "E", fieldValueDescription = "PREVIOUSLY_INDICATED"},FieldValueSpec {fieldValueEnum = "G", fieldValueDescription = "FOREX_SWAP"},FieldValueSpec {fieldValueEnum = "I", fieldValueDescription = "FUNARI"},FieldValueSpec {fieldValueEnum = "J", fieldValueDescription = "MARKET_IF_TOUCHED"},FieldValueSpec {fieldValueEnum = "K", fieldValueDescription = "MARKET_WITH_LEFT_OVER_AS_LIMIT"},FieldValueSpec {fieldValueEnum = "L", fieldValueDescription = "PREVIOUS_FUND_VALUATION_POINT"},FieldValueSpec {fieldValueEnum = "M", fieldValueDescription = "NEXT_FUND_VALUATION_POINT"},FieldValueSpec {fieldValueEnum = "P", fieldValueDescription = "PEGGED"}]}
data OrdType
  = OrdType_MARKET
  | OrdType_LIMIT
  | OrdType_STOP
  | OrdType_STOP_LIMIT
  | OrdType_WITH_OR_WITHOUT
  | OrdType_LIMIT_OR_BETTER
  | OrdType_LIMIT_WITH_OR_WITHOUT
  | OrdType_ON_BASIS
  | OrdType_PREVIOUSLY_QUOTED
  | OrdType_PREVIOUSLY_INDICATED
  | OrdType_FOREX_SWAP
  | OrdType_FUNARI
  | OrdType_MARKET_IF_TOUCHED
  | OrdType_MARKET_WITH_LEFT_OVER_AS_LIMIT
  | OrdType_PREVIOUS_FUND_VALUATION_POINT
  | OrdType_NEXT_FUND_VALUATION_POINT
  | OrdType_PEGGED
  deriving stock (Show, Eq, Generic)

instance Validity OrdType

instance IsField OrdType where
  fieldTag Proxy = 40
  fieldIsData Proxy = False
  fieldToValue = \case
    OrdType_MARKET -> "1"
    OrdType_LIMIT -> "2"
    OrdType_STOP -> "3"
    OrdType_STOP_LIMIT -> "4"
    OrdType_WITH_OR_WITHOUT -> "6"
    OrdType_LIMIT_OR_BETTER -> "7"
    OrdType_LIMIT_WITH_OR_WITHOUT -> "8"
    OrdType_ON_BASIS -> "9"
    OrdType_PREVIOUSLY_QUOTED -> "D"
    OrdType_PREVIOUSLY_INDICATED -> "E"
    OrdType_FOREX_SWAP -> "G"
    OrdType_FUNARI -> "I"
    OrdType_MARKET_IF_TOUCHED -> "J"
    OrdType_MARKET_WITH_LEFT_OVER_AS_LIMIT -> "K"
    OrdType_PREVIOUS_FUND_VALUATION_POINT -> "L"
    OrdType_NEXT_FUND_VALUATION_POINT -> "M"
    OrdType_PEGGED -> "P"
  fieldFromValue = \case
    "1" -> Right OrdType_MARKET
    "2" -> Right OrdType_LIMIT
    "3" -> Right OrdType_STOP
    "4" -> Right OrdType_STOP_LIMIT
    "6" -> Right OrdType_WITH_OR_WITHOUT
    "7" -> Right OrdType_LIMIT_OR_BETTER
    "8" -> Right OrdType_LIMIT_WITH_OR_WITHOUT
    "9" -> Right OrdType_ON_BASIS
    "D" -> Right OrdType_PREVIOUSLY_QUOTED
    "E" -> Right OrdType_PREVIOUSLY_INDICATED
    "G" -> Right OrdType_FOREX_SWAP
    "I" -> Right OrdType_FUNARI
    "J" -> Right OrdType_MARKET_IF_TOUCHED
    "K" -> Right OrdType_MARKET_WITH_LEFT_OVER_AS_LIMIT
    "L" -> Right OrdType_PREVIOUS_FUND_VALUATION_POINT
    "M" -> Right OrdType_NEXT_FUND_VALUATION_POINT
    "P" -> Right OrdType_PEGGED
    v -> Left ("Unknown OrdType: " <> show v)
