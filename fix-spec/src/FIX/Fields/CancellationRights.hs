{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.CancellationRights where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 480, fieldName = "CancellationRights", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "Y", fieldValueDescription = "YES"},FieldValueSpec {fieldValueEnum = "N", fieldValueDescription = "NO_EXECUTION_ONLY"},FieldValueSpec {fieldValueEnum = "M", fieldValueDescription = "NO_WAIVER_AGREEMENT"},FieldValueSpec {fieldValueEnum = "O", fieldValueDescription = "NO_INSTITUTIONAL"}]}
data CancellationRights
  = CancellationRights_YES
  | CancellationRights_NO_EXECUTION_ONLY
  | CancellationRights_NO_WAIVER_AGREEMENT
  | CancellationRights_NO_INSTITUTIONAL
  deriving stock (Show, Eq, Generic)

instance Validity CancellationRights

instance IsField CancellationRights where
  fieldTag Proxy = 480
  fieldIsData Proxy = False
  fieldToValue = \case
    CancellationRights_YES -> "Y"
    CancellationRights_NO_EXECUTION_ONLY -> "N"
    CancellationRights_NO_WAIVER_AGREEMENT -> "M"
    CancellationRights_NO_INSTITUTIONAL -> "O"
  fieldFromValue = \case
    "Y" -> Right CancellationRights_YES
    "N" -> Right CancellationRights_NO_EXECUTION_ONLY
    "M" -> Right CancellationRights_NO_WAIVER_AGREEMENT
    "O" -> Right CancellationRights_NO_INSTITUTIONAL
    v -> Left ("Unknown CancellationRights: " <> show v)
