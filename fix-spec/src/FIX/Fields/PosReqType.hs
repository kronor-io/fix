{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.PosReqType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 724, fieldName = "PosReqType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "POSITIONS"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "TRADES"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "EXERCISES"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "ASSIGNMENTS"}]}
data PosReqType
  = PosReqType_POSITIONS
  | PosReqType_TRADES
  | PosReqType_EXERCISES
  | PosReqType_ASSIGNMENTS
  deriving stock (Show, Eq, Generic)

instance Validity PosReqType

instance IsField PosReqType where
  fieldTag Proxy = 724
  fieldIsData Proxy = False
  fieldToValue = \case
    PosReqType_POSITIONS -> "0"
    PosReqType_TRADES -> "1"
    PosReqType_EXERCISES -> "2"
    PosReqType_ASSIGNMENTS -> "3"
  fieldFromValue = \case
    "0" -> Right PosReqType_POSITIONS
    "1" -> Right PosReqType_TRADES
    "2" -> Right PosReqType_EXERCISES
    "3" -> Right PosReqType_ASSIGNMENTS
    v -> Left ("Unknown PosReqType: " <> show v)
