{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.PosQtyStatus where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 706, fieldName = "PosQtyStatus", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "SUBMITTED"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ACCEPTED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "REJECTED"}]}
data PosQtyStatus
  = PosQtyStatus_SUBMITTED
  | PosQtyStatus_ACCEPTED
  | PosQtyStatus_REJECTED
  deriving stock (Show, Eq, Generic)

instance Validity PosQtyStatus

instance IsField PosQtyStatus where
  fieldTag Proxy = 706
  fieldIsData Proxy = False
  fieldToValue = \case
    PosQtyStatus_SUBMITTED -> "0"
    PosQtyStatus_ACCEPTED -> "1"
    PosQtyStatus_REJECTED -> "2"
  fieldFromValue = \case
    "0" -> Right PosQtyStatus_SUBMITTED
    "1" -> Right PosQtyStatus_ACCEPTED
    "2" -> Right PosQtyStatus_REJECTED
    v -> Left ("Unknown PosQtyStatus: " <> show v)
