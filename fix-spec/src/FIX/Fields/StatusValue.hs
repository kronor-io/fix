{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.StatusValue where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 928, fieldName = "StatusValue", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "CONNECTED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "NOT_CONNECTED_UNEXPECTED"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "NOT_CONNECTED_EXPECTED"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "IN_PROCESS"}]}
data StatusValue
  = StatusValue_CONNECTED
  | StatusValue_NOT_CONNECTED_UNEXPECTED
  | StatusValue_NOT_CONNECTED_EXPECTED
  | StatusValue_IN_PROCESS
  deriving stock (Show, Eq, Generic)

instance Validity StatusValue

instance IsField StatusValue where
  fieldTag Proxy = 928
  fieldIsData Proxy = False
  fieldToValue = \case
    StatusValue_CONNECTED -> "1"
    StatusValue_NOT_CONNECTED_UNEXPECTED -> "2"
    StatusValue_NOT_CONNECTED_EXPECTED -> "3"
    StatusValue_IN_PROCESS -> "4"
  fieldFromValue = \case
    "1" -> Right StatusValue_CONNECTED
    "2" -> Right StatusValue_NOT_CONNECTED_UNEXPECTED
    "3" -> Right StatusValue_NOT_CONNECTED_EXPECTED
    "4" -> Right StatusValue_IN_PROCESS
    v -> Left ("Unknown StatusValue: " <> show v)
