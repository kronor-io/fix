{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.PosTransType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 709, fieldName = "PosTransType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "EXERCISE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "DO_NOT_EXERCISE"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "POSITION_ADJUSTMENT"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "POSITION_CHANGE_SUBMISSION"},FieldValueSpec {fieldValueEnum = "5", fieldValueDescription = "PLEDGE"}]}
data PosTransType
  = PosTransType_EXERCISE
  | PosTransType_DO_NOT_EXERCISE
  | PosTransType_POSITION_ADJUSTMENT
  | PosTransType_POSITION_CHANGE_SUBMISSION
  | PosTransType_PLEDGE
  deriving stock (Show, Eq, Generic)

instance Validity PosTransType

instance IsField PosTransType where
  fieldTag Proxy = 709
  fieldIsData Proxy = False
  fieldToValue = \case
    PosTransType_EXERCISE -> "1"
    PosTransType_DO_NOT_EXERCISE -> "2"
    PosTransType_POSITION_ADJUSTMENT -> "3"
    PosTransType_POSITION_CHANGE_SUBMISSION -> "4"
    PosTransType_PLEDGE -> "5"
  fieldFromValue = \case
    "1" -> Right PosTransType_EXERCISE
    "2" -> Right PosTransType_DO_NOT_EXERCISE
    "3" -> Right PosTransType_POSITION_ADJUSTMENT
    "4" -> Right PosTransType_POSITION_CHANGE_SUBMISSION
    "5" -> Right PosTransType_PLEDGE
    v -> Left ("Unknown PosTransType: " <> show v)
