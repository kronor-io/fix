{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.BidType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 394, fieldName = "BidType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "NON_DISCLOSED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "DISCLOSED"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "NO_BIDDING_PROCESS"}]}
data BidType
  = BidType_NON_DISCLOSED
  | BidType_DISCLOSED
  | BidType_NO_BIDDING_PROCESS
  deriving stock (Show, Eq, Generic)

instance Validity BidType

instance IsField BidType where
  fieldTag Proxy = 394
  fieldIsData Proxy = False
  fieldToValue = \case
    BidType_NON_DISCLOSED -> "1"
    BidType_DISCLOSED -> "2"
    BidType_NO_BIDDING_PROCESS -> "3"
  fieldFromValue = \case
    "1" -> Right BidType_NON_DISCLOSED
    "2" -> Right BidType_DISCLOSED
    "3" -> Right BidType_NO_BIDDING_PROCESS
    v -> Left ("Unknown BidType: " <> show v)
