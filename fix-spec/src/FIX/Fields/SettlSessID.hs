{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.SettlSessID where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 716, fieldName = "SettlSessID", fieldType = FieldTypeString, fieldValues = [FieldValueSpec {fieldValueEnum = "ITD", fieldValueDescription = "INTRADAY"},FieldValueSpec {fieldValueEnum = "RTH", fieldValueDescription = "REGULAR_TRADING_HOURS"},FieldValueSpec {fieldValueEnum = "ETH", fieldValueDescription = "ELECTRONIC_TRADING_HOURS"}]}
data SettlSessID
  = SettlSessID_INTRADAY
  | SettlSessID_REGULAR_TRADING_HOURS
  | SettlSessID_ELECTRONIC_TRADING_HOURS
  deriving stock (Show, Eq, Generic)

instance Validity SettlSessID

instance IsField SettlSessID where
  fieldTag Proxy = 716
  fieldIsData Proxy = False
  fieldToValue = \case
    SettlSessID_INTRADAY -> "ITD"
    SettlSessID_REGULAR_TRADING_HOURS -> "RTH"
    SettlSessID_ELECTRONIC_TRADING_HOURS -> "ETH"
  fieldFromValue = \case
    "ITD" -> Right SettlSessID_INTRADAY
    "RTH" -> Right SettlSessID_REGULAR_TRADING_HOURS
    "ETH" -> Right SettlSessID_ELECTRONIC_TRADING_HOURS
    v -> Left ("Unknown SettlSessID: " <> show v)
