{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DlvyInstType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 787, fieldName = "DlvyInstType", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "S", fieldValueDescription = "SECURITIES"},FieldValueSpec {fieldValueEnum = "C", fieldValueDescription = "CASH"}]}
data DlvyInstType
  = DlvyInstType_SECURITIES
  | DlvyInstType_CASH
  deriving stock (Show, Eq, Generic)

instance Validity DlvyInstType

instance IsField DlvyInstType where
  fieldTag Proxy = 787
  fieldIsData Proxy = False
  fieldToValue = \case
    DlvyInstType_SECURITIES -> "S"
    DlvyInstType_CASH -> "C"
  fieldFromValue = \case
    "S" -> Right DlvyInstType_SECURITIES
    "C" -> Right DlvyInstType_CASH
    v -> Left ("Unknown DlvyInstType: " <> show v)
