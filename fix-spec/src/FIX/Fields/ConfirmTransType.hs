{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ConfirmTransType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 666, fieldName = "ConfirmTransType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "NEW"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "REPLACE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "CANCEL"}]}
data ConfirmTransType
  = ConfirmTransType_NEW
  | ConfirmTransType_REPLACE
  | ConfirmTransType_CANCEL
  deriving stock (Show, Eq, Generic)

instance Validity ConfirmTransType

instance IsField ConfirmTransType where
  fieldTag Proxy = 666
  fieldIsData Proxy = False
  fieldToValue = \case
    ConfirmTransType_NEW -> "0"
    ConfirmTransType_REPLACE -> "1"
    ConfirmTransType_CANCEL -> "2"
  fieldFromValue = \case
    "0" -> Right ConfirmTransType_NEW
    "1" -> Right ConfirmTransType_REPLACE
    "2" -> Right ConfirmTransType_CANCEL
    v -> Left ("Unknown ConfirmTransType: " <> show v)
