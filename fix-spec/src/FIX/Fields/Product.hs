{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.Product where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 460
--   , fieldName = "Product"
--   , fieldType = FieldTypeInt
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "1" , fieldValueDescription = "AGENCY" }
--       , FieldValueSpec
--           { fieldValueEnum = "2" , fieldValueDescription = "COMMODITY" }
--       , FieldValueSpec
--           { fieldValueEnum = "3" , fieldValueDescription = "CORPORATE" }
--       , FieldValueSpec
--           { fieldValueEnum = "4" , fieldValueDescription = "CURRENCY" }
--       , FieldValueSpec
--           { fieldValueEnum = "5" , fieldValueDescription = "EQUITY" }
--       , FieldValueSpec
--           { fieldValueEnum = "6" , fieldValueDescription = "GOVERNMENT" }
--       , FieldValueSpec
--           { fieldValueEnum = "7" , fieldValueDescription = "INDEX" }
--       , FieldValueSpec
--           { fieldValueEnum = "8" , fieldValueDescription = "LOAN" }
--       , FieldValueSpec
--           { fieldValueEnum = "9" , fieldValueDescription = "MONEYMARKET" }
--       , FieldValueSpec
--           { fieldValueEnum = "10" , fieldValueDescription = "MORTGAGE" }
--       , FieldValueSpec
--           { fieldValueEnum = "11" , fieldValueDescription = "MUNICIPAL" }
--       , FieldValueSpec
--           { fieldValueEnum = "12" , fieldValueDescription = "OTHER" }
--       , FieldValueSpec
--           { fieldValueEnum = "13" , fieldValueDescription = "FINANCING" }
--       ]
--   }
data Product
  = ProductAgency
  | ProductCommodity
  | ProductCorporate
  | ProductCurrency
  | ProductEquity
  | ProductGovernment
  | ProductIndex
  | ProductLoan
  | ProductMoneymarket
  | ProductMortgage
  | ProductMunicipal
  | ProductOther
  | ProductFinancing
  deriving stock (Show, Eq, Generic)

instance Validity Product

instance IsField Product where
  fieldTag Proxy = 460
  fieldIsData Proxy = False
  fieldToValue = \case
    ProductAgency -> "1"
    ProductCommodity -> "2"
    ProductCorporate -> "3"
    ProductCurrency -> "4"
    ProductEquity -> "5"
    ProductGovernment -> "6"
    ProductIndex -> "7"
    ProductLoan -> "8"
    ProductMoneymarket -> "9"
    ProductMortgage -> "10"
    ProductMunicipal -> "11"
    ProductOther -> "12"
    ProductFinancing -> "13"
  fieldFromValue = \case
    "1" -> Right ProductAgency
    "2" -> Right ProductCommodity
    "3" -> Right ProductCorporate
    "4" -> Right ProductCurrency
    "5" -> Right ProductEquity
    "6" -> Right ProductGovernment
    "7" -> Right ProductIndex
    "8" -> Right ProductLoan
    "9" -> Right ProductMoneymarket
    "10" -> Right ProductMortgage
    "11" -> Right ProductMunicipal
    "12" -> Right ProductOther
    "13" -> Right ProductFinancing
    v -> Left ("Unknown Product: " <> show v)
