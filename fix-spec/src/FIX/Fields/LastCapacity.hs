{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.LastCapacity where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 29
--   , fieldName = "LastCapacity"
--   , fieldType = FieldTypeChar
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "1" , fieldValueDescription = "AGENT" }
--       , FieldValueSpec
--           { fieldValueEnum = "2" , fieldValueDescription = "CROSS_AS_AGENT" }
--       , FieldValueSpec
--           { fieldValueEnum = "3"
--           , fieldValueDescription = "CROSS_AS_PRINCIPAL"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "4" , fieldValueDescription = "PRINCIPAL" }
--       ]
--   }
data LastCapacity
  = LastCapacityAgent
  | LastCapacityCrossAsAgent
  | LastCapacityCrossAsPrincipal
  | LastCapacityPrincipal
  deriving stock (Show, Eq, Generic)

instance Validity LastCapacity

instance IsField LastCapacity where
  fieldTag Proxy = 29
  fieldIsData Proxy = False
  fieldToValue = \case
    LastCapacityAgent -> "1"
    LastCapacityCrossAsAgent -> "2"
    LastCapacityCrossAsPrincipal -> "3"
    LastCapacityPrincipal -> "4"
  fieldFromValue = \case
    "1" -> Right LastCapacityAgent
    "2" -> Right LastCapacityCrossAsAgent
    "3" -> Right LastCapacityCrossAsPrincipal
    "4" -> Right LastCapacityPrincipal
    v -> Left ("Unknown LastCapacity: " <> show v)
