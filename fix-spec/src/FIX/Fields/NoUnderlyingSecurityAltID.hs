{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.NoUnderlyingSecurityAltID where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 457, fieldName = "NoUnderlyingSecurityAltID", fieldType = FieldTypeNumInGroup, fieldValues = []}
newtype NoUnderlyingSecurityAltID = NoUnderlyingSecurityAltID {unNoUnderlyingSecurityAltID :: ByteString}
  deriving stock (Show, Eq, Generic)

instance Validity NoUnderlyingSecurityAltID

instance IsField NoUnderlyingSecurityAltID where
  fieldTag Proxy = 457
  fieldIsData Proxy = False
  fieldToValue = toValue . unNoUnderlyingSecurityAltID
  fieldFromValue = fromValue >=> (prettyValidate . NoUnderlyingSecurityAltID)
