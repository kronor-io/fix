{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.QuoteRequestType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 303, fieldName = "QuoteRequestType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "MANUAL"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "AUTOMATIC"}]}
data QuoteRequestType
  = QuoteRequestType_MANUAL
  | QuoteRequestType_AUTOMATIC
  deriving stock (Show, Eq, Generic)

instance Validity QuoteRequestType

instance IsField QuoteRequestType where
  fieldTag Proxy = 303
  fieldIsData Proxy = False
  fieldToValue = \case
    QuoteRequestType_MANUAL -> "1"
    QuoteRequestType_AUTOMATIC -> "2"
  fieldFromValue = \case
    "1" -> Right QuoteRequestType_MANUAL
    "2" -> Right QuoteRequestType_AUTOMATIC
    v -> Left ("Unknown QuoteRequestType: " <> show v)
