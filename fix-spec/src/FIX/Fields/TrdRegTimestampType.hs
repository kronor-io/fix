{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.TrdRegTimestampType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 770, fieldName = "TrdRegTimestampType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "EXECUTION_TIME"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "TIME_IN"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "TIME_OUT"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "BROKER_RECEIPT"},FieldValueSpec {fieldValueEnum = "5", fieldValueDescription = "BROKER_EXECUTION"}]}
data TrdRegTimestampType
  = TrdRegTimestampType_EXECUTION_TIME
  | TrdRegTimestampType_TIME_IN
  | TrdRegTimestampType_TIME_OUT
  | TrdRegTimestampType_BROKER_RECEIPT
  | TrdRegTimestampType_BROKER_EXECUTION
  deriving stock (Show, Eq, Generic)

instance Validity TrdRegTimestampType

instance IsField TrdRegTimestampType where
  fieldTag Proxy = 770
  fieldIsData Proxy = False
  fieldToValue = \case
    TrdRegTimestampType_EXECUTION_TIME -> "1"
    TrdRegTimestampType_TIME_IN -> "2"
    TrdRegTimestampType_TIME_OUT -> "3"
    TrdRegTimestampType_BROKER_RECEIPT -> "4"
    TrdRegTimestampType_BROKER_EXECUTION -> "5"
  fieldFromValue = \case
    "1" -> Right TrdRegTimestampType_EXECUTION_TIME
    "2" -> Right TrdRegTimestampType_TIME_IN
    "3" -> Right TrdRegTimestampType_TIME_OUT
    "4" -> Right TrdRegTimestampType_BROKER_RECEIPT
    "5" -> Right TrdRegTimestampType_BROKER_EXECUTION
    v -> Left ("Unknown TrdRegTimestampType: " <> show v)
