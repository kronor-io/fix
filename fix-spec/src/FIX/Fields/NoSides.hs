{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.NoSides where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 552, fieldName = "NoSides", fieldType = FieldTypeNumInGroup, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ONE_SIDE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "BOTH_SIDES"}]}
data NoSides
  = NoSides_ONE_SIDE
  | NoSides_BOTH_SIDES
  deriving stock (Show, Eq, Generic)

instance Validity NoSides

instance IsField NoSides where
  fieldTag Proxy = 552
  fieldIsData Proxy = False
  fieldToValue = \case
    NoSides_ONE_SIDE -> "1"
    NoSides_BOTH_SIDES -> "2"
  fieldFromValue = \case
    "1" -> Right NoSides_ONE_SIDE
    "2" -> Right NoSides_BOTH_SIDES
    v -> Left ("Unknown NoSides: " <> show v)
