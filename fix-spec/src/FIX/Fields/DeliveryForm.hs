{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DeliveryForm where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 668, fieldName = "DeliveryForm", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "BOOK_ENTRY"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "BEARER"}]}
data DeliveryForm
  = DeliveryForm_BOOK_ENTRY
  | DeliveryForm_BEARER
  deriving stock (Show, Eq, Generic)

instance Validity DeliveryForm

instance IsField DeliveryForm where
  fieldTag Proxy = 668
  fieldIsData Proxy = False
  fieldToValue = \case
    DeliveryForm_BOOK_ENTRY -> "1"
    DeliveryForm_BEARER -> "2"
  fieldFromValue = \case
    "1" -> Right DeliveryForm_BOOK_ENTRY
    "2" -> Right DeliveryForm_BEARER
    v -> Left ("Unknown DeliveryForm: " <> show v)
