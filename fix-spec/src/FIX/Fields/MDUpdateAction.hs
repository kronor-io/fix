{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.MDUpdateAction where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 279, fieldName = "MDUpdateAction", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "NEW"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "CHANGE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "DELETE"}]}
data MDUpdateAction
  = MDUpdateAction_NEW
  | MDUpdateAction_CHANGE
  | MDUpdateAction_DELETE
  deriving stock (Show, Eq, Generic)

instance Validity MDUpdateAction

instance IsField MDUpdateAction where
  fieldTag Proxy = 279
  fieldIsData Proxy = False
  fieldToValue = \case
    MDUpdateAction_NEW -> "0"
    MDUpdateAction_CHANGE -> "1"
    MDUpdateAction_DELETE -> "2"
  fieldFromValue = \case
    "0" -> Right MDUpdateAction_NEW
    "1" -> Right MDUpdateAction_CHANGE
    "2" -> Right MDUpdateAction_DELETE
    v -> Left ("Unknown MDUpdateAction: " <> show v)
