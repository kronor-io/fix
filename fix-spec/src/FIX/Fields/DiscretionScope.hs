{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DiscretionScope where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 846, fieldName = "DiscretionScope", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "LOCAL"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "NATIONAL"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "GLOBAL"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "NATIONAL_EXCLUDING_LOCAL"}]}
data DiscretionScope
  = DiscretionScope_LOCAL
  | DiscretionScope_NATIONAL
  | DiscretionScope_GLOBAL
  | DiscretionScope_NATIONAL_EXCLUDING_LOCAL
  deriving stock (Show, Eq, Generic)

instance Validity DiscretionScope

instance IsField DiscretionScope where
  fieldTag Proxy = 846
  fieldIsData Proxy = False
  fieldToValue = \case
    DiscretionScope_LOCAL -> "1"
    DiscretionScope_NATIONAL -> "2"
    DiscretionScope_GLOBAL -> "3"
    DiscretionScope_NATIONAL_EXCLUDING_LOCAL -> "4"
  fieldFromValue = \case
    "1" -> Right DiscretionScope_LOCAL
    "2" -> Right DiscretionScope_NATIONAL
    "3" -> Right DiscretionScope_GLOBAL
    "4" -> Right DiscretionScope_NATIONAL_EXCLUDING_LOCAL
    v -> Left ("Unknown DiscretionScope: " <> show v)
