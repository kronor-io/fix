{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DayBookingInst where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 589
--   , fieldName = "DayBookingInst"
--   , fieldType = FieldTypeChar
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "0"
--           , fieldValueDescription =
--               "CAN_TRIGGER_BOOKING_WITHOUT_REFERENCE_TO_THE_ORDER_INITIATOR"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "1"
--           , fieldValueDescription =
--               "SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "2" , fieldValueDescription = "ACCUMULATE" }
--       ]
--   }
data DayBookingInst
  = DayBookingInstCanTriggerBookingWithoutReferenceToTheOrderInitiator
  | DayBookingInstSpeakWithOrderInitiatorBeforeBooking
  | DayBookingInstAccumulate
  deriving stock (Show, Eq, Generic)

instance Validity DayBookingInst

instance IsField DayBookingInst where
  fieldTag Proxy = 589
  fieldIsData Proxy = False
  fieldToValue = \case
    DayBookingInstCanTriggerBookingWithoutReferenceToTheOrderInitiator -> "0"
    DayBookingInstSpeakWithOrderInitiatorBeforeBooking -> "1"
    DayBookingInstAccumulate -> "2"
  fieldFromValue = \case
    "0" -> Right DayBookingInstCanTriggerBookingWithoutReferenceToTheOrderInitiator
    "1" -> Right DayBookingInstSpeakWithOrderInitiatorBeforeBooking
    "2" -> Right DayBookingInstAccumulate
    v -> Left ("Unknown DayBookingInst: " <> show v)
