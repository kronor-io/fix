{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DayBookingInst where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 589, fieldName = "DayBookingInst", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "AUTO"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "ACCUMULATE"}]}
data DayBookingInst
  = DayBookingInst_AUTO
  | DayBookingInst_SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING
  | DayBookingInst_ACCUMULATE
  deriving stock (Show, Eq, Generic)

instance Validity DayBookingInst

instance IsField DayBookingInst where
  fieldTag Proxy = 589
  fieldIsData Proxy = False
  fieldToValue = \case
    DayBookingInst_AUTO -> "0"
    DayBookingInst_SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING -> "1"
    DayBookingInst_ACCUMULATE -> "2"
  fieldFromValue = \case
    "0" -> Right DayBookingInst_AUTO
    "1" -> Right DayBookingInst_SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING
    "2" -> Right DayBookingInst_ACCUMULATE
    v -> Left ("Unknown DayBookingInst: " <> show v)
