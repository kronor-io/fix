{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ConfirmRejReason where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 774, fieldName = "ConfirmRejReason", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "MISMATCHED_ACCOUNT"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "MISSING_SETTLEMENT_INSTRUCTIONS"},FieldValueSpec {fieldValueEnum = "99", fieldValueDescription = "OTHER"}]}
data ConfirmRejReason
  = ConfirmRejReason_MISMATCHED_ACCOUNT
  | ConfirmRejReason_MISSING_SETTLEMENT_INSTRUCTIONS
  | ConfirmRejReason_OTHER
  deriving stock (Show, Eq, Generic)

instance Validity ConfirmRejReason

instance IsField ConfirmRejReason where
  fieldTag Proxy = 774
  fieldIsData Proxy = False
  fieldToValue = \case
    ConfirmRejReason_MISMATCHED_ACCOUNT -> "1"
    ConfirmRejReason_MISSING_SETTLEMENT_INSTRUCTIONS -> "2"
    ConfirmRejReason_OTHER -> "99"
  fieldFromValue = \case
    "1" -> Right ConfirmRejReason_MISMATCHED_ACCOUNT
    "2" -> Right ConfirmRejReason_MISSING_SETTLEMENT_INSTRUCTIONS
    "99" -> Right ConfirmRejReason_OTHER
    v -> Left ("Unknown ConfirmRejReason: " <> show v)
