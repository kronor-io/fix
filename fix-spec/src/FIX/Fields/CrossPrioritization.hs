{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.CrossPrioritization where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 550, fieldName = "CrossPrioritization", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "NONE"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "BUY_SIDE_IS_PRIORITIZED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "SELL_SIDE_IS_PRIORITIZED"}]}
data CrossPrioritization
  = CrossPrioritization_NONE
  | CrossPrioritization_BUY_SIDE_IS_PRIORITIZED
  | CrossPrioritization_SELL_SIDE_IS_PRIORITIZED
  deriving stock (Show, Eq, Generic)

instance Validity CrossPrioritization

instance IsField CrossPrioritization where
  fieldTag Proxy = 550
  fieldIsData Proxy = False
  fieldToValue = \case
    CrossPrioritization_NONE -> "0"
    CrossPrioritization_BUY_SIDE_IS_PRIORITIZED -> "1"
    CrossPrioritization_SELL_SIDE_IS_PRIORITIZED -> "2"
  fieldFromValue = \case
    "0" -> Right CrossPrioritization_NONE
    "1" -> Right CrossPrioritization_BUY_SIDE_IS_PRIORITIZED
    "2" -> Right CrossPrioritization_SELL_SIDE_IS_PRIORITIZED
    v -> Left ("Unknown CrossPrioritization: " <> show v)
