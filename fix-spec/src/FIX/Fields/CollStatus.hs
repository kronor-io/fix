{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.CollStatus where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 910, fieldName = "CollStatus", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "UNASSIGNED"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "PARTIALLY_ASSIGNED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "ASSIGNMENT_PROPOSED"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "ASSIGNED"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "CHALLENGED"}]}
data CollStatus
  = CollStatus_UNASSIGNED
  | CollStatus_PARTIALLY_ASSIGNED
  | CollStatus_ASSIGNMENT_PROPOSED
  | CollStatus_ASSIGNED
  | CollStatus_CHALLENGED
  deriving stock (Show, Eq, Generic)

instance Validity CollStatus

instance IsField CollStatus where
  fieldTag Proxy = 910
  fieldIsData Proxy = False
  fieldToValue = \case
    CollStatus_UNASSIGNED -> "0"
    CollStatus_PARTIALLY_ASSIGNED -> "1"
    CollStatus_ASSIGNMENT_PROPOSED -> "2"
    CollStatus_ASSIGNED -> "3"
    CollStatus_CHALLENGED -> "4"
  fieldFromValue = \case
    "0" -> Right CollStatus_UNASSIGNED
    "1" -> Right CollStatus_PARTIALLY_ASSIGNED
    "2" -> Right CollStatus_ASSIGNMENT_PROPOSED
    "3" -> Right CollStatus_ASSIGNED
    "4" -> Right CollStatus_CHALLENGED
    v -> Left ("Unknown CollStatus: " <> show v)
