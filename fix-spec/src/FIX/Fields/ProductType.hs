{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ProductType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 7071
--   , fieldName = "ProductType"
--   , fieldType = FieldTypeString
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "FX-STD"
--           , fieldValueDescription = "Spot, Forward, Swap, NDF and NDS"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "FX-BT"
--           , fieldValueDescription = "Block trade"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "Metals Outright"
--           , fieldValueDescription = "Metals Outright"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "Metals Spread"
--           , fieldValueDescription = "Metals Spread"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "Metals Quarterly Strip"
--           , fieldValueDescription = "Metals Quarterly Strip"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "MM" , fieldValueDescription = "Loan/Deposit" }
--       ]
--   }
data ProductType
  = ProductTypeSpotForwardSwapNdfAndNds
  | ProductTypeBlockTrade
  | ProductTypeMetalsOutright
  | ProductTypeMetalsSpread
  | ProductTypeMetalsQuarterlyStrip
  | ProductTypeLoanDeposit
  deriving stock (Show, Eq, Generic)

instance Validity ProductType

instance IsField ProductType where
  fieldTag Proxy = 7071
  fieldIsData Proxy = False
  fieldToValue = \case
    ProductTypeSpotForwardSwapNdfAndNds -> "FX-STD"
    ProductTypeBlockTrade -> "FX-BT"
    ProductTypeMetalsOutright -> "Metals Outright"
    ProductTypeMetalsSpread -> "Metals Spread"
    ProductTypeMetalsQuarterlyStrip -> "Metals Quarterly Strip"
    ProductTypeLoanDeposit -> "MM"
  fieldFromValue = \case
    "FX-STD" -> Right ProductTypeSpotForwardSwapNdfAndNds
    "FX-BT" -> Right ProductTypeBlockTrade
    "Metals Outright" -> Right ProductTypeMetalsOutright
    "Metals Spread" -> Right ProductTypeMetalsSpread
    "Metals Quarterly Strip" -> Right ProductTypeMetalsQuarterlyStrip
    "MM" -> Right ProductTypeLoanDeposit
    v -> Left ("Unknown ProductType: " <> show v)
