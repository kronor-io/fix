{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.AllocCancReplaceReason where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 796, fieldName = "AllocCancReplaceReason", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ORIGINAL_DETAILS_INCOMPLETE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "CHANGE_IN_UNDERLYING_ORDER_DETAILS"},FieldValueSpec {fieldValueEnum = "99", fieldValueDescription = "OTHER"}]}
data AllocCancReplaceReason
  = AllocCancReplaceReason_ORIGINAL_DETAILS_INCOMPLETE
  | AllocCancReplaceReason_CHANGE_IN_UNDERLYING_ORDER_DETAILS
  | AllocCancReplaceReason_OTHER
  deriving stock (Show, Eq, Generic)

instance Validity AllocCancReplaceReason

instance IsField AllocCancReplaceReason where
  fieldTag Proxy = 796
  fieldIsData Proxy = False
  fieldToValue = \case
    AllocCancReplaceReason_ORIGINAL_DETAILS_INCOMPLETE -> "1"
    AllocCancReplaceReason_CHANGE_IN_UNDERLYING_ORDER_DETAILS -> "2"
    AllocCancReplaceReason_OTHER -> "99"
  fieldFromValue = \case
    "1" -> Right AllocCancReplaceReason_ORIGINAL_DETAILS_INCOMPLETE
    "2" -> Right AllocCancReplaceReason_CHANGE_IN_UNDERLYING_ORDER_DETAILS
    "99" -> Right AllocCancReplaceReason_OTHER
    v -> Left ("Unknown AllocCancReplaceReason: " <> show v)
