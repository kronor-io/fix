{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ListExecInstType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 433, fieldName = "ListExecInstType", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "IMMEDIATE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "WAIT_FOR_INSTRUCTION"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "SELL_DRIVEN"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "BUY_DRIVEN_CASH_TOP_UP"},FieldValueSpec {fieldValueEnum = "5", fieldValueDescription = "BUY_DRIVEN_CASH_WITHDRAW"}]}
data ListExecInstType
  = ListExecInstType_IMMEDIATE
  | ListExecInstType_WAIT_FOR_INSTRUCTION
  | ListExecInstType_SELL_DRIVEN
  | ListExecInstType_BUY_DRIVEN_CASH_TOP_UP
  | ListExecInstType_BUY_DRIVEN_CASH_WITHDRAW
  deriving stock (Show, Eq, Generic)

instance Validity ListExecInstType

instance IsField ListExecInstType where
  fieldTag Proxy = 433
  fieldIsData Proxy = False
  fieldToValue = \case
    ListExecInstType_IMMEDIATE -> "1"
    ListExecInstType_WAIT_FOR_INSTRUCTION -> "2"
    ListExecInstType_SELL_DRIVEN -> "3"
    ListExecInstType_BUY_DRIVEN_CASH_TOP_UP -> "4"
    ListExecInstType_BUY_DRIVEN_CASH_WITHDRAW -> "5"
  fieldFromValue = \case
    "1" -> Right ListExecInstType_IMMEDIATE
    "2" -> Right ListExecInstType_WAIT_FOR_INSTRUCTION
    "3" -> Right ListExecInstType_SELL_DRIVEN
    "4" -> Right ListExecInstType_BUY_DRIVEN_CASH_TOP_UP
    "5" -> Right ListExecInstType_BUY_DRIVEN_CASH_WITHDRAW
    v -> Left ("Unknown ListExecInstType: " <> show v)
