{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.AccountType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 581
--   , fieldName = "AccountType"
--   , fieldType = FieldTypeInt
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "1"
--           , fieldValueDescription =
--               "ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_BOOKS"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "2"
--           , fieldValueDescription =
--               "ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "3" , fieldValueDescription = "HOUSE_TRADER" }
--       , FieldValueSpec
--           { fieldValueEnum = "4" , fieldValueDescription = "FLOOR_TRADER" }
--       , FieldValueSpec
--           { fieldValueEnum = "6"
--           , fieldValueDescription =
--               "ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "7"
--           , fieldValueDescription =
--               "ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "8"
--           , fieldValueDescription = "JOINT_BACKOFFICE_ACCOUNT"
--           }
--       ]
--   }
data AccountType
  = AccountTypeAccountIsCarriedOnCustomerSideOfBooks
  | AccountTypeAccountIsCarriedOnNonCustomerSideOfBooks
  | AccountTypeHouseTrader
  | AccountTypeFloorTrader
  | AccountTypeAccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined
  | AccountTypeAccountIsHouseTraderAndIsCrossMargined
  | AccountTypeJointBackofficeAccount
  deriving stock (Show, Eq, Generic)

instance Validity AccountType

instance IsField AccountType where
  fieldTag Proxy = 581
  fieldIsData Proxy = False
  fieldToValue = \case
    AccountTypeAccountIsCarriedOnCustomerSideOfBooks -> "1"
    AccountTypeAccountIsCarriedOnNonCustomerSideOfBooks -> "2"
    AccountTypeHouseTrader -> "3"
    AccountTypeFloorTrader -> "4"
    AccountTypeAccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined -> "6"
    AccountTypeAccountIsHouseTraderAndIsCrossMargined -> "7"
    AccountTypeJointBackofficeAccount -> "8"
  fieldFromValue = \case
    "1" -> Right AccountTypeAccountIsCarriedOnCustomerSideOfBooks
    "2" -> Right AccountTypeAccountIsCarriedOnNonCustomerSideOfBooks
    "3" -> Right AccountTypeHouseTrader
    "4" -> Right AccountTypeFloorTrader
    "6" -> Right AccountTypeAccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined
    "7" -> Right AccountTypeAccountIsHouseTraderAndIsCrossMargined
    "8" -> Right AccountTypeJointBackofficeAccount
    v -> Left ("Unknown AccountType: " <> show v)
