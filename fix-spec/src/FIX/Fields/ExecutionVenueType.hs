{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ExecutionVenueType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 7611
--   , fieldName = "ExecutionVenueType"
--   , fieldType = FieldTypeString
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "2"
--           , fieldValueDescription = "OFF facility / OTC"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "5" , fieldValueDescription = "EU MTF" }
--       , FieldValueSpec
--           { fieldValueEnum = "6" , fieldValueDescription = "UK MTF" }
--       ]
--   }
data ExecutionVenueType
  = ExecutionVenueTypeOffFacility_Otc
  | ExecutionVenueTypeEuMtf
  | ExecutionVenueTypeUkMtf
  deriving stock (Show, Eq, Generic)

instance Validity ExecutionVenueType

instance IsField ExecutionVenueType where
  fieldTag Proxy = 7611
  fieldIsData Proxy = False
  fieldToValue = \case
    ExecutionVenueTypeOffFacility_Otc -> "2"
    ExecutionVenueTypeEuMtf -> "5"
    ExecutionVenueTypeUkMtf -> "6"
  fieldFromValue = \case
    "2" -> Right ExecutionVenueTypeOffFacility_Otc
    "5" -> Right ExecutionVenueTypeEuMtf
    "6" -> Right ExecutionVenueTypeUkMtf
    v -> Left ("Unknown ExecutionVenueType: " <> show v)
