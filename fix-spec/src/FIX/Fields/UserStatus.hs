{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.UserStatus where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 926, fieldName = "UserStatus", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "LOGGED_IN"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "NOT_LOGGED_IN"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "USER_NOT_RECOGNISED"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "PASSWORD_INCORRECT"},FieldValueSpec {fieldValueEnum = "5", fieldValueDescription = "PASSWORD_CHANGED"},FieldValueSpec {fieldValueEnum = "6", fieldValueDescription = "OTHER"}]}
data UserStatus
  = UserStatus_LOGGED_IN
  | UserStatus_NOT_LOGGED_IN
  | UserStatus_USER_NOT_RECOGNISED
  | UserStatus_PASSWORD_INCORRECT
  | UserStatus_PASSWORD_CHANGED
  | UserStatus_OTHER
  deriving stock (Show, Eq, Generic)

instance Validity UserStatus

instance IsField UserStatus where
  fieldTag Proxy = 926
  fieldIsData Proxy = False
  fieldToValue = \case
    UserStatus_LOGGED_IN -> "1"
    UserStatus_NOT_LOGGED_IN -> "2"
    UserStatus_USER_NOT_RECOGNISED -> "3"
    UserStatus_PASSWORD_INCORRECT -> "4"
    UserStatus_PASSWORD_CHANGED -> "5"
    UserStatus_OTHER -> "6"
  fieldFromValue = \case
    "1" -> Right UserStatus_LOGGED_IN
    "2" -> Right UserStatus_NOT_LOGGED_IN
    "3" -> Right UserStatus_USER_NOT_RECOGNISED
    "4" -> Right UserStatus_PASSWORD_INCORRECT
    "5" -> Right UserStatus_PASSWORD_CHANGED
    "6" -> Right UserStatus_OTHER
    v -> Left ("Unknown UserStatus: " <> show v)
