{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.SecurityListRequestType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 559, fieldName = "SecurityListRequestType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "SYMBOL"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "SECURITY_TYPE_AND"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "PRODUCT"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "TRADING_SESSION_ID"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "ALL_SECURITIES"}]}
data SecurityListRequestType
  = SecurityListRequestType_SYMBOL
  | SecurityListRequestType_SECURITY_TYPE_AND
  | SecurityListRequestType_PRODUCT
  | SecurityListRequestType_TRADING_SESSION_ID
  | SecurityListRequestType_ALL_SECURITIES
  deriving stock (Show, Eq, Generic)

instance Validity SecurityListRequestType

instance IsField SecurityListRequestType where
  fieldTag Proxy = 559
  fieldIsData Proxy = False
  fieldToValue = \case
    SecurityListRequestType_SYMBOL -> "0"
    SecurityListRequestType_SECURITY_TYPE_AND -> "1"
    SecurityListRequestType_PRODUCT -> "2"
    SecurityListRequestType_TRADING_SESSION_ID -> "3"
    SecurityListRequestType_ALL_SECURITIES -> "4"
  fieldFromValue = \case
    "0" -> Right SecurityListRequestType_SYMBOL
    "1" -> Right SecurityListRequestType_SECURITY_TYPE_AND
    "2" -> Right SecurityListRequestType_PRODUCT
    "3" -> Right SecurityListRequestType_TRADING_SESSION_ID
    "4" -> Right SecurityListRequestType_ALL_SECURITIES
    v -> Left ("Unknown SecurityListRequestType: " <> show v)
