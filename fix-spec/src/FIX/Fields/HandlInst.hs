{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.HandlInst where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 21, fieldName = "HandlInst", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "AUTOMATED_EXECUTION_NO_INTERVENTION"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "AUTOMATED_EXECUTION_INTERVENTION_OK"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "MANUAL_ORDER"}]}
data HandlInst
  = HandlInst_AUTOMATED_EXECUTION_NO_INTERVENTION
  | HandlInst_AUTOMATED_EXECUTION_INTERVENTION_OK
  | HandlInst_MANUAL_ORDER
  deriving stock (Show, Eq, Generic)

instance Validity HandlInst

instance IsField HandlInst where
  fieldTag Proxy = 21
  fieldIsData Proxy = False
  fieldToValue = \case
    HandlInst_AUTOMATED_EXECUTION_NO_INTERVENTION -> "1"
    HandlInst_AUTOMATED_EXECUTION_INTERVENTION_OK -> "2"
    HandlInst_MANUAL_ORDER -> "3"
  fieldFromValue = \case
    "1" -> Right HandlInst_AUTOMATED_EXECUTION_NO_INTERVENTION
    "2" -> Right HandlInst_AUTOMATED_EXECUTION_INTERVENTION_OK
    "3" -> Right HandlInst_MANUAL_ORDER
    v -> Left ("Unknown HandlInst: " <> show v)
