{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.QuoteCondition where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 276, fieldName = "QuoteCondition", fieldType = FieldTypeMultipleValueString, fieldValues = [FieldValueSpec {fieldValueEnum = "A", fieldValueDescription = "OPEN"},FieldValueSpec {fieldValueEnum = "B", fieldValueDescription = "CLOSED"},FieldValueSpec {fieldValueEnum = "C", fieldValueDescription = "EXCHANGE_BEST"},FieldValueSpec {fieldValueEnum = "D", fieldValueDescription = "CONSOLIDATED_BEST"},FieldValueSpec {fieldValueEnum = "E", fieldValueDescription = "LOCKED"},FieldValueSpec {fieldValueEnum = "F", fieldValueDescription = "CROSSED"},FieldValueSpec {fieldValueEnum = "G", fieldValueDescription = "DEPTH"},FieldValueSpec {fieldValueEnum = "H", fieldValueDescription = "FAST_TRADING"},FieldValueSpec {fieldValueEnum = "I", fieldValueDescription = "NON_FIRM"}]}
data QuoteCondition
  = QuoteCondition_OPEN
  | QuoteCondition_CLOSED
  | QuoteCondition_EXCHANGE_BEST
  | QuoteCondition_CONSOLIDATED_BEST
  | QuoteCondition_LOCKED
  | QuoteCondition_CROSSED
  | QuoteCondition_DEPTH
  | QuoteCondition_FAST_TRADING
  | QuoteCondition_NON_FIRM
  deriving stock (Show, Eq, Generic)

instance Validity QuoteCondition

instance IsField QuoteCondition where
  fieldTag Proxy = 276
  fieldIsData Proxy = False
  fieldToValue = \case
    QuoteCondition_OPEN -> "A"
    QuoteCondition_CLOSED -> "B"
    QuoteCondition_EXCHANGE_BEST -> "C"
    QuoteCondition_CONSOLIDATED_BEST -> "D"
    QuoteCondition_LOCKED -> "E"
    QuoteCondition_CROSSED -> "F"
    QuoteCondition_DEPTH -> "G"
    QuoteCondition_FAST_TRADING -> "H"
    QuoteCondition_NON_FIRM -> "I"
  fieldFromValue = \case
    "A" -> Right QuoteCondition_OPEN
    "B" -> Right QuoteCondition_CLOSED
    "C" -> Right QuoteCondition_EXCHANGE_BEST
    "D" -> Right QuoteCondition_CONSOLIDATED_BEST
    "E" -> Right QuoteCondition_LOCKED
    "F" -> Right QuoteCondition_CROSSED
    "G" -> Right QuoteCondition_DEPTH
    "H" -> Right QuoteCondition_FAST_TRADING
    "I" -> Right QuoteCondition_NON_FIRM
    v -> Left ("Unknown QuoteCondition: " <> show v)
