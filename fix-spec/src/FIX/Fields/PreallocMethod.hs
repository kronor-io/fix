{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.PreallocMethod where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 591, fieldName = "PreallocMethod", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "PRO_RATA"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "DO_NOT_PRO_RATA"}]}
data PreallocMethod
  = PreallocMethod_PRO_RATA
  | PreallocMethod_DO_NOT_PRO_RATA
  deriving stock (Show, Eq, Generic)

instance Validity PreallocMethod

instance IsField PreallocMethod where
  fieldTag Proxy = 591
  fieldIsData Proxy = False
  fieldToValue = \case
    PreallocMethod_PRO_RATA -> "0"
    PreallocMethod_DO_NOT_PRO_RATA -> "1"
  fieldFromValue = \case
    "0" -> Right PreallocMethod_PRO_RATA
    "1" -> Right PreallocMethod_DO_NOT_PRO_RATA
    v -> Left ("Unknown PreallocMethod: " <> show v)
