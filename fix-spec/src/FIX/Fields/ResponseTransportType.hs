{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ResponseTransportType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 725, fieldName = "ResponseTransportType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "INBAND"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "OUT_OF_BAND"}]}
data ResponseTransportType
  = ResponseTransportType_INBAND
  | ResponseTransportType_OUT_OF_BAND
  deriving stock (Show, Eq, Generic)

instance Validity ResponseTransportType

instance IsField ResponseTransportType where
  fieldTag Proxy = 725
  fieldIsData Proxy = False
  fieldToValue = \case
    ResponseTransportType_INBAND -> "0"
    ResponseTransportType_OUT_OF_BAND -> "1"
  fieldFromValue = \case
    "0" -> Right ResponseTransportType_INBAND
    "1" -> Right ResponseTransportType_OUT_OF_BAND
    v -> Left ("Unknown ResponseTransportType: " <> show v)
