{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DeliveryType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 919, fieldName = "DeliveryType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "VERSUS_PAYMENT"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "FREE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "TRI_PARTY"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "HOLD_IN_CUSTODY"}]}
data DeliveryType
  = DeliveryType_VERSUS_PAYMENT
  | DeliveryType_FREE
  | DeliveryType_TRI_PARTY
  | DeliveryType_HOLD_IN_CUSTODY
  deriving stock (Show, Eq, Generic)

instance Validity DeliveryType

instance IsField DeliveryType where
  fieldTag Proxy = 919
  fieldIsData Proxy = False
  fieldToValue = \case
    DeliveryType_VERSUS_PAYMENT -> "0"
    DeliveryType_FREE -> "1"
    DeliveryType_TRI_PARTY -> "2"
    DeliveryType_HOLD_IN_CUSTODY -> "3"
  fieldFromValue = \case
    "0" -> Right DeliveryType_VERSUS_PAYMENT
    "1" -> Right DeliveryType_FREE
    "2" -> Right DeliveryType_TRI_PARTY
    "3" -> Right DeliveryType_HOLD_IN_CUSTODY
    v -> Left ("Unknown DeliveryType: " <> show v)
