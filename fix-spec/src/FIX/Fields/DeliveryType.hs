{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.DeliveryType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 919
--   , fieldName = "DeliveryType"
--   , fieldType = FieldTypeInt
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "0" , fieldValueDescription = "VERSUS_PAYMENT" }
--       , FieldValueSpec
--           { fieldValueEnum = "1" , fieldValueDescription = "FREE" }
--       , FieldValueSpec
--           { fieldValueEnum = "2" , fieldValueDescription = "TRI_PARTY" }
--       , FieldValueSpec
--           { fieldValueEnum = "3"
--           , fieldValueDescription = "HOLD_IN_CUSTODY"
--           }
--       ]
--   }
data DeliveryType
  = DeliveryTypeVersusPayment
  | DeliveryTypeFree
  | DeliveryTypeTriParty
  | DeliveryTypeHoldInCustody
  deriving stock (Show, Eq, Generic)

instance Validity DeliveryType

instance IsField DeliveryType where
  fieldTag Proxy = 919
  fieldIsData Proxy = False
  fieldToValue = \case
    DeliveryTypeVersusPayment -> "0"
    DeliveryTypeFree -> "1"
    DeliveryTypeTriParty -> "2"
    DeliveryTypeHoldInCustody -> "3"
  fieldFromValue = \case
    "0" -> Right DeliveryTypeVersusPayment
    "1" -> Right DeliveryTypeFree
    "2" -> Right DeliveryTypeTriParty
    "3" -> Right DeliveryTypeHoldInCustody
    v -> Left ("Unknown DeliveryType: " <> show v)
