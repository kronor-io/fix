{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.GTBookingInst where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 427, fieldName = "GTBookingInst", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ACCUMULATE_UNTIL_FILLED_OR_EXPIRED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE"}]}
data GTBookingInst
  = GTBookingInst_BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION
  | GTBookingInst_ACCUMULATE_UNTIL_FILLED_OR_EXPIRED
  | GTBookingInst_ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE
  deriving stock (Show, Eq, Generic)

instance Validity GTBookingInst

instance IsField GTBookingInst where
  fieldTag Proxy = 427
  fieldIsData Proxy = False
  fieldToValue = \case
    GTBookingInst_BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION -> "0"
    GTBookingInst_ACCUMULATE_UNTIL_FILLED_OR_EXPIRED -> "1"
    GTBookingInst_ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE -> "2"
  fieldFromValue = \case
    "0" -> Right GTBookingInst_BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION
    "1" -> Right GTBookingInst_ACCUMULATE_UNTIL_FILLED_OR_EXPIRED
    "2" -> Right GTBookingInst_ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE
    v -> Left ("Unknown GTBookingInst: " <> show v)
