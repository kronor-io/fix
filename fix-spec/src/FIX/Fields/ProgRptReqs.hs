{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ProgRptReqs where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 414, fieldName = "ProgRptReqs", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "BUY_SIDE_REQUESTS"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "SELL_SIDE_SENDS"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "REAL_TIME_EXECUTION_REPORTS"}]}
data ProgRptReqs
  = ProgRptReqs_BUY_SIDE_REQUESTS
  | ProgRptReqs_SELL_SIDE_SENDS
  | ProgRptReqs_REAL_TIME_EXECUTION_REPORTS
  deriving stock (Show, Eq, Generic)

instance Validity ProgRptReqs

instance IsField ProgRptReqs where
  fieldTag Proxy = 414
  fieldIsData Proxy = False
  fieldToValue = \case
    ProgRptReqs_BUY_SIDE_REQUESTS -> "1"
    ProgRptReqs_SELL_SIDE_SENDS -> "2"
    ProgRptReqs_REAL_TIME_EXECUTION_REPORTS -> "3"
  fieldFromValue = \case
    "1" -> Right ProgRptReqs_BUY_SIDE_REQUESTS
    "2" -> Right ProgRptReqs_SELL_SIDE_SENDS
    "3" -> Right ProgRptReqs_REAL_TIME_EXECUTION_REPORTS
    v -> Left ("Unknown ProgRptReqs: " <> show v)
