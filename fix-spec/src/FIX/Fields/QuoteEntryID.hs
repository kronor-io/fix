{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.QuoteEntryID where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 299, fieldName = "QuoteEntryID", fieldType = FieldTypeString, fieldValues = []}
newtype QuoteEntryID = QuoteEntryID {unQuoteEntryID :: ByteString}
  deriving stock (Show, Eq, Generic)

instance Validity QuoteEntryID

instance IsField QuoteEntryID where
  fieldTag Proxy = 299
  fieldIsData Proxy = False
  fieldToValue = toValue . unQuoteEntryID
  fieldFromValue = fromValue >=> (prettyValidate . QuoteEntryID)
