{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.BidRequestTransType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 374, fieldName = "BidRequestTransType", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "N", fieldValueDescription = "NEW"},FieldValueSpec {fieldValueEnum = "C", fieldValueDescription = "CANCEL"}]}
data BidRequestTransType
  = BidRequestTransType_NEW
  | BidRequestTransType_CANCEL
  deriving stock (Show, Eq, Generic)

instance Validity BidRequestTransType

instance IsField BidRequestTransType where
  fieldTag Proxy = 374
  fieldIsData Proxy = False
  fieldToValue = \case
    BidRequestTransType_NEW -> "N"
    BidRequestTransType_CANCEL -> "C"
  fieldFromValue = \case
    "N" -> Right BidRequestTransType_NEW
    "C" -> Right BidRequestTransType_CANCEL
    v -> Left ("Unknown BidRequestTransType: " <> show v)
