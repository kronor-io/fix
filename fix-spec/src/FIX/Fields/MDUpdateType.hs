{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.MDUpdateType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 265, fieldName = "MDUpdateType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "FULL_REFRESH"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "INCREMENTAL_REFRESH"}]}
data MDUpdateType
  = MDUpdateType_FULL_REFRESH
  | MDUpdateType_INCREMENTAL_REFRESH
  deriving stock (Show, Eq, Generic)

instance Validity MDUpdateType

instance IsField MDUpdateType where
  fieldTag Proxy = 265
  fieldIsData Proxy = False
  fieldToValue = \case
    MDUpdateType_FULL_REFRESH -> "0"
    MDUpdateType_INCREMENTAL_REFRESH -> "1"
  fieldFromValue = \case
    "0" -> Right MDUpdateType_FULL_REFRESH
    "1" -> Right MDUpdateType_INCREMENTAL_REFRESH
    v -> Left ("Unknown MDUpdateType: " <> show v)
