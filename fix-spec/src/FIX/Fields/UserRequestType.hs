{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.UserRequestType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 924, fieldName = "UserRequestType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "LOG_ON_USER"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "LOG_OFF_USER"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "CHANGE_PASSWORD_FOR_USER"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "REQUEST_INDIVIDUAL_USER_STATUS"}]}
data UserRequestType
  = UserRequestType_LOG_ON_USER
  | UserRequestType_LOG_OFF_USER
  | UserRequestType_CHANGE_PASSWORD_FOR_USER
  | UserRequestType_REQUEST_INDIVIDUAL_USER_STATUS
  deriving stock (Show, Eq, Generic)

instance Validity UserRequestType

instance IsField UserRequestType where
  fieldTag Proxy = 924
  fieldIsData Proxy = False
  fieldToValue = \case
    UserRequestType_LOG_ON_USER -> "1"
    UserRequestType_LOG_OFF_USER -> "2"
    UserRequestType_CHANGE_PASSWORD_FOR_USER -> "3"
    UserRequestType_REQUEST_INDIVIDUAL_USER_STATUS -> "4"
  fieldFromValue = \case
    "1" -> Right UserRequestType_LOG_ON_USER
    "2" -> Right UserRequestType_LOG_OFF_USER
    "3" -> Right UserRequestType_CHANGE_PASSWORD_FOR_USER
    "4" -> Right UserRequestType_REQUEST_INDIVIDUAL_USER_STATUS
    v -> Left ("Unknown UserRequestType: " <> show v)
