{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.AdjustmentType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 718, fieldName = "AdjustmentType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "PROCESS_REQUEST_AS_MARGIN_DISPOSITION"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "DELTA_PLUS"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "DELTA_MINUS"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "FINAL"}]}
data AdjustmentType
  = AdjustmentType_PROCESS_REQUEST_AS_MARGIN_DISPOSITION
  | AdjustmentType_DELTA_PLUS
  | AdjustmentType_DELTA_MINUS
  | AdjustmentType_FINAL
  deriving stock (Show, Eq, Generic)

instance Validity AdjustmentType

instance IsField AdjustmentType where
  fieldTag Proxy = 718
  fieldIsData Proxy = False
  fieldToValue = \case
    AdjustmentType_PROCESS_REQUEST_AS_MARGIN_DISPOSITION -> "0"
    AdjustmentType_DELTA_PLUS -> "1"
    AdjustmentType_DELTA_MINUS -> "2"
    AdjustmentType_FINAL -> "3"
  fieldFromValue = \case
    "0" -> Right AdjustmentType_PROCESS_REQUEST_AS_MARGIN_DISPOSITION
    "1" -> Right AdjustmentType_DELTA_PLUS
    "2" -> Right AdjustmentType_DELTA_MINUS
    "3" -> Right AdjustmentType_FINAL
    v -> Left ("Unknown AdjustmentType: " <> show v)
