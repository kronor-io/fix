{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.TargetStrategy where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 847, fieldName = "TargetStrategy", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "VWAP"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "PARTICIPATE"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "MININIZE_MARKET_IMPACT"}]}
data TargetStrategy
  = TargetStrategy_VWAP
  | TargetStrategy_PARTICIPATE
  | TargetStrategy_MININIZE_MARKET_IMPACT
  deriving stock (Show, Eq, Generic)

instance Validity TargetStrategy

instance IsField TargetStrategy where
  fieldTag Proxy = 847
  fieldIsData Proxy = False
  fieldToValue = \case
    TargetStrategy_VWAP -> "1"
    TargetStrategy_PARTICIPATE -> "2"
    TargetStrategy_MININIZE_MARKET_IMPACT -> "3"
  fieldFromValue = \case
    "1" -> Right TargetStrategy_VWAP
    "2" -> Right TargetStrategy_PARTICIPATE
    "3" -> Right TargetStrategy_MININIZE_MARKET_IMPACT
    v -> Left ("Unknown TargetStrategy: " <> show v)
