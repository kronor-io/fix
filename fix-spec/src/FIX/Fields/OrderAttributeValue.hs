{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.OrderAttributeValue where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 2595
--   , fieldName = "OrderAttributeValue"
--   , fieldType = FieldTypeString
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "Y"
--           , fieldValueDescription = "Risk Decreasing"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "N"
--           , fieldValueDescription = "Risk Increasing"
--           }
--       ]
--   }
data OrderAttributeValue
  = OrderAttributeValueRiskDecreasing
  | OrderAttributeValueRiskIncreasing
  deriving stock (Show, Eq, Generic)

instance Validity OrderAttributeValue

instance IsField OrderAttributeValue where
  fieldTag Proxy = 2595
  fieldIsData Proxy = False
  fieldToValue = \case
    OrderAttributeValueRiskDecreasing -> "Y"
    OrderAttributeValueRiskIncreasing -> "N"
  fieldFromValue = \case
    "Y" -> Right OrderAttributeValueRiskDecreasing
    "N" -> Right OrderAttributeValueRiskIncreasing
    v -> Left ("Unknown OrderAttributeValue: " <> show v)
