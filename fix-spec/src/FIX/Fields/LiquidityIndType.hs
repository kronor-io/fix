{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.LiquidityIndType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 409, fieldName = "LiquidityIndType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "FIVE_DAY_MOVING_AVERAGE"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "TWENTY_DAY_MOVING_AVERAGE"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "NORMAL_MARKET_SIZE"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "OTHER"}]}
data LiquidityIndType
  = LiquidityIndType_FIVE_DAY_MOVING_AVERAGE
  | LiquidityIndType_TWENTY_DAY_MOVING_AVERAGE
  | LiquidityIndType_NORMAL_MARKET_SIZE
  | LiquidityIndType_OTHER
  deriving stock (Show, Eq, Generic)

instance Validity LiquidityIndType

instance IsField LiquidityIndType where
  fieldTag Proxy = 409
  fieldIsData Proxy = False
  fieldToValue = \case
    LiquidityIndType_FIVE_DAY_MOVING_AVERAGE -> "1"
    LiquidityIndType_TWENTY_DAY_MOVING_AVERAGE -> "2"
    LiquidityIndType_NORMAL_MARKET_SIZE -> "3"
    LiquidityIndType_OTHER -> "4"
  fieldFromValue = \case
    "1" -> Right LiquidityIndType_FIVE_DAY_MOVING_AVERAGE
    "2" -> Right LiquidityIndType_TWENTY_DAY_MOVING_AVERAGE
    "3" -> Right LiquidityIndType_NORMAL_MARKET_SIZE
    "4" -> Right LiquidityIndType_OTHER
    v -> Left ("Unknown LiquidityIndType: " <> show v)
