{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.LegSwapType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 690
--   , fieldName = "LegSwapType"
--   , fieldType = FieldTypeInt
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "1" , fieldValueDescription = "PAR_FOR_PAR" }
--       , FieldValueSpec
--           { fieldValueEnum = "2"
--           , fieldValueDescription = "MODIFIED_DURATION"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "4" , fieldValueDescription = "RISK" }
--       , FieldValueSpec
--           { fieldValueEnum = "5" , fieldValueDescription = "PROCEEDS" }
--       ]
--   }
data LegSwapType
  = LegSwapTypeParForPar
  | LegSwapTypeModifiedDuration
  | LegSwapTypeRisk
  | LegSwapTypeProceeds
  deriving stock (Show, Eq, Generic)

instance Validity LegSwapType

instance IsField LegSwapType where
  fieldTag Proxy = 690
  fieldIsData Proxy = False
  fieldToValue = \case
    LegSwapTypeParForPar -> "1"
    LegSwapTypeModifiedDuration -> "2"
    LegSwapTypeRisk -> "4"
    LegSwapTypeProceeds -> "5"
  fieldFromValue = \case
    "1" -> Right LegSwapTypeParForPar
    "2" -> Right LegSwapTypeModifiedDuration
    "4" -> Right LegSwapTypeRisk
    "5" -> Right LegSwapTypeProceeds
    v -> Left ("Unknown LegSwapType: " <> show v)
