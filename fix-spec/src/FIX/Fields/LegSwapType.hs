{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.LegSwapType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 690, fieldName = "LegSwapType", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "PAR_FOR_PAR"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "MODIFIED_DURATION"},FieldValueSpec {fieldValueEnum = "4", fieldValueDescription = "RISK"},FieldValueSpec {fieldValueEnum = "5", fieldValueDescription = "PROCEEDS"}]}
data LegSwapType
  = LegSwapType_PAR_FOR_PAR
  | LegSwapType_MODIFIED_DURATION
  | LegSwapType_RISK
  | LegSwapType_PROCEEDS
  deriving stock (Show, Eq, Generic)

instance Validity LegSwapType

instance IsField LegSwapType where
  fieldTag Proxy = 690
  fieldIsData Proxy = False
  fieldToValue = \case
    LegSwapType_PAR_FOR_PAR -> "1"
    LegSwapType_MODIFIED_DURATION -> "2"
    LegSwapType_RISK -> "4"
    LegSwapType_PROCEEDS -> "5"
  fieldFromValue = \case
    "1" -> Right LegSwapType_PAR_FOR_PAR
    "2" -> Right LegSwapType_MODIFIED_DURATION
    "4" -> Right LegSwapType_RISK
    "5" -> Right LegSwapType_PROCEEDS
    v -> Left ("Unknown LegSwapType: " <> show v)
