{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ExpirationCycle where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 827, fieldName = "ExpirationCycle", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "EXPIRE_ON_TRADING_SESSION_CLOSE"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "EXPIRE_ON_TRADING_SESSION_OPEN"}]}
data ExpirationCycle
  = ExpirationCycle_EXPIRE_ON_TRADING_SESSION_CLOSE
  | ExpirationCycle_EXPIRE_ON_TRADING_SESSION_OPEN
  deriving stock (Show, Eq, Generic)

instance Validity ExpirationCycle

instance IsField ExpirationCycle where
  fieldTag Proxy = 827
  fieldIsData Proxy = False
  fieldToValue = \case
    ExpirationCycle_EXPIRE_ON_TRADING_SESSION_CLOSE -> "0"
    ExpirationCycle_EXPIRE_ON_TRADING_SESSION_OPEN -> "1"
  fieldFromValue = \case
    "0" -> Right ExpirationCycle_EXPIRE_ON_TRADING_SESSION_CLOSE
    "1" -> Right ExpirationCycle_EXPIRE_ON_TRADING_SESSION_OPEN
    v -> Left ("Unknown ExpirationCycle: " <> show v)
