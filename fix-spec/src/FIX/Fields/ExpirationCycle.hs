{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.ExpirationCycle where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- | FieldSpec
--   { fieldNumber = 827
--   , fieldName = "ExpirationCycle"
--   , fieldType = FieldTypeInt
--   , fieldValues =
--       [ FieldValueSpec
--           { fieldValueEnum = "0"
--           , fieldValueDescription = "EXPIRE_ON_TRADING_SESSION_CLOSE"
--           }
--       , FieldValueSpec
--           { fieldValueEnum = "1"
--           , fieldValueDescription = "EXPIRE_ON_TRADING_SESSION_OPEN"
--           }
--       ]
--   }
data ExpirationCycle
  = ExpirationCycleExpireOnTradingSessionClose
  | ExpirationCycleExpireOnTradingSessionOpen
  deriving stock (Show, Eq, Generic)

instance Validity ExpirationCycle

instance IsField ExpirationCycle where
  fieldTag Proxy = 827
  fieldIsData Proxy = False
  fieldToValue = \case
    ExpirationCycleExpireOnTradingSessionClose -> "0"
    ExpirationCycleExpireOnTradingSessionOpen -> "1"
  fieldFromValue = \case
    "0" -> Right ExpirationCycleExpireOnTradingSessionClose
    "1" -> Right ExpirationCycleExpireOnTradingSessionOpen
    v -> Left ("Unknown ExpirationCycle: " <> show v)
