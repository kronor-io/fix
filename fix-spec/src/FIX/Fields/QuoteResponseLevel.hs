{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.QuoteResponseLevel where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 301, fieldName = "QuoteResponseLevel", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "NO_ACKNOWLEDGEMENT"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "ACKNOWLEDGE_EACH_QUOTE_MESSAGE"}]}
data QuoteResponseLevel
  = QuoteResponseLevel_NO_ACKNOWLEDGEMENT
  | QuoteResponseLevel_ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES
  | QuoteResponseLevel_ACKNOWLEDGE_EACH_QUOTE_MESSAGE
  deriving stock (Show, Eq, Generic)

instance Validity QuoteResponseLevel

instance IsField QuoteResponseLevel where
  fieldTag Proxy = 301
  fieldIsData Proxy = False
  fieldToValue = \case
    QuoteResponseLevel_NO_ACKNOWLEDGEMENT -> "0"
    QuoteResponseLevel_ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES -> "1"
    QuoteResponseLevel_ACKNOWLEDGE_EACH_QUOTE_MESSAGE -> "2"
  fieldFromValue = \case
    "0" -> Right QuoteResponseLevel_NO_ACKNOWLEDGEMENT
    "1" -> Right QuoteResponseLevel_ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES
    "2" -> Right QuoteResponseLevel_ACKNOWLEDGE_EACH_QUOTE_MESSAGE
    v -> Left ("Unknown QuoteResponseLevel: " <> show v)
