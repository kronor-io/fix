{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.SettlInstReqRejCode where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 792, fieldName = "SettlInstReqRejCode", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "UNABLE_TO_PROCESS_REQUEST"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "UNKNOWN_ACCOUNT"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND"},FieldValueSpec {fieldValueEnum = "99", fieldValueDescription = "OTHER"}]}
data SettlInstReqRejCode
  = SettlInstReqRejCode_UNABLE_TO_PROCESS_REQUEST
  | SettlInstReqRejCode_UNKNOWN_ACCOUNT
  | SettlInstReqRejCode_NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND
  | SettlInstReqRejCode_OTHER
  deriving stock (Show, Eq, Generic)

instance Validity SettlInstReqRejCode

instance IsField SettlInstReqRejCode where
  fieldTag Proxy = 792
  fieldIsData Proxy = False
  fieldToValue = \case
    SettlInstReqRejCode_UNABLE_TO_PROCESS_REQUEST -> "0"
    SettlInstReqRejCode_UNKNOWN_ACCOUNT -> "1"
    SettlInstReqRejCode_NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND -> "2"
    SettlInstReqRejCode_OTHER -> "99"
  fieldFromValue = \case
    "0" -> Right SettlInstReqRejCode_UNABLE_TO_PROCESS_REQUEST
    "1" -> Right SettlInstReqRejCode_UNKNOWN_ACCOUNT
    "2" -> Right SettlInstReqRejCode_NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND
    "99" -> Right SettlInstReqRejCode_OTHER
    v -> Left ("Unknown SettlInstReqRejCode: " <> show v)
