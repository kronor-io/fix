{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.BookingUnit where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 590, fieldName = "BookingUnit", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "0", fieldValueDescription = "EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT"},FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL"}]}
data BookingUnit
  = BookingUnit_EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT
  | BookingUnit_AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER
  | BookingUnit_AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL
  deriving stock (Show, Eq, Generic)

instance Validity BookingUnit

instance IsField BookingUnit where
  fieldTag Proxy = 590
  fieldIsData Proxy = False
  fieldToValue = \case
    BookingUnit_EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT -> "0"
    BookingUnit_AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER -> "1"
    BookingUnit_AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL -> "2"
  fieldFromValue = \case
    "0" -> Right BookingUnit_EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT
    "1" -> Right BookingUnit_AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER
    "2" -> Right BookingUnit_AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL
    v -> Left ("Unknown BookingUnit: " <> show v)
