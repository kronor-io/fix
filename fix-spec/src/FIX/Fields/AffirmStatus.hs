{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.AffirmStatus where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module ("HLint: ignore" :: String) #-}

-- FieldSpec {fieldNumber = 940, fieldName = "AffirmStatus", fieldType = FieldTypeInt, fieldValues = [FieldValueSpec {fieldValueEnum = "1", fieldValueDescription = "RECEIVED"},FieldValueSpec {fieldValueEnum = "2", fieldValueDescription = "CONFIRM_REJECTED"},FieldValueSpec {fieldValueEnum = "3", fieldValueDescription = "AFFIRMED"}]}
data AffirmStatus
  = AffirmStatus_RECEIVED
  | AffirmStatus_CONFIRM_REJECTED
  | AffirmStatus_AFFIRMED
  deriving stock (Show, Eq, Generic)

instance Validity AffirmStatus

instance IsField AffirmStatus where
  fieldTag Proxy = 940
  fieldIsData Proxy = False
  fieldToValue = \case
    AffirmStatus_RECEIVED -> "1"
    AffirmStatus_CONFIRM_REJECTED -> "2"
    AffirmStatus_AFFIRMED -> "3"
  fieldFromValue = \case
    "1" -> Right AffirmStatus_RECEIVED
    "2" -> Right AffirmStatus_CONFIRM_REJECTED
    "3" -> Right AffirmStatus_AFFIRMED
    v -> Left ("Unknown AffirmStatus: " <> show v)
