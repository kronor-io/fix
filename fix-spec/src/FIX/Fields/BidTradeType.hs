{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- | This module has been GENERATED by fix-codegen.
-- Any manual edits will be undone the next time fix-codegen is run.
module FIX.Fields.BidTradeType where

import Control.Monad
import Data.ByteString (ByteString)
import Data.Proxy
import Data.Validity
import FIX.Core (IsField (..), IsFieldType (..))
import GHC.Generics (Generic)

{-# ANN module "HLint: ignore" #-}

-- FieldSpec {fieldNumber = 418, fieldName = "BidTradeType", fieldType = FieldTypeChar, fieldValues = [FieldValueSpec {fieldValueEnum = "R", fieldValueDescription = "RISK_TRADE"},FieldValueSpec {fieldValueEnum = "G", fieldValueDescription = "VWAP_GUARANTEE"},FieldValueSpec {fieldValueEnum = "A", fieldValueDescription = "AGENCY"},FieldValueSpec {fieldValueEnum = "J", fieldValueDescription = "GUARANTEED_CLOSE"}]}
data BidTradeType
  = BidTradeType_RISK_TRADE
  | BidTradeType_VWAP_GUARANTEE
  | BidTradeType_AGENCY
  | BidTradeType_GUARANTEED_CLOSE
  deriving stock (Show, Eq, Generic)

instance Validity BidTradeType

instance IsField BidTradeType where
  fieldTag Proxy = 418
  fieldIsData Proxy = False
  fieldToValue = \case
    BidTradeType_RISK_TRADE -> "R"
    BidTradeType_VWAP_GUARANTEE -> "G"
    BidTradeType_AGENCY -> "A"
    BidTradeType_GUARANTEED_CLOSE -> "J"
  fieldFromValue = \case
    "R" -> Right BidTradeType_RISK_TRADE
    "G" -> Right BidTradeType_VWAP_GUARANTEE
    "A" -> Right BidTradeType_AGENCY
    "J" -> Right BidTradeType_GUARANTEED_CLOSE
    v -> Left ("Unknown BidTradeType: " <> show v)
